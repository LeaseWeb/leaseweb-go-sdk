/*
bmsdb

This documents the rest api bmsdb provides.

API version: v2
Contact: development-networkautomation@leaseweb.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bmsdb

import (
	"encoding/json"
)

// checks if the GetServerHardwareScanResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetServerHardwareScanResult{}

// GetServerHardwareScanResult Hardware Scan information
type GetServerHardwareScanResult struct {
	// Hardware Scan ID
	Id *string `json:"id,omitempty"`
	ParserVersion *string `json:"parserVersion,omitempty"`
	Result *Results `json:"result,omitempty"`
	// Date time using the ISO-8601 format
	ScannedAt *string `json:"scannedAt,omitempty"`
	ServerId *string `json:"serverId,omitempty"`
}

// NewGetServerHardwareScanResult instantiates a new GetServerHardwareScanResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetServerHardwareScanResult() *GetServerHardwareScanResult {
	this := GetServerHardwareScanResult{}
	return &this
}

// NewGetServerHardwareScanResultWithDefaults instantiates a new GetServerHardwareScanResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetServerHardwareScanResultWithDefaults() *GetServerHardwareScanResult {
	this := GetServerHardwareScanResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetServerHardwareScanResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerHardwareScanResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetServerHardwareScanResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetServerHardwareScanResult) SetId(v string) {
	o.Id = &v
}

// GetParserVersion returns the ParserVersion field value if set, zero value otherwise.
func (o *GetServerHardwareScanResult) GetParserVersion() string {
	if o == nil || IsNil(o.ParserVersion) {
		var ret string
		return ret
	}
	return *o.ParserVersion
}

// GetParserVersionOk returns a tuple with the ParserVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerHardwareScanResult) GetParserVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ParserVersion) {
		return nil, false
	}
	return o.ParserVersion, true
}

// HasParserVersion returns a boolean if a field has been set.
func (o *GetServerHardwareScanResult) HasParserVersion() bool {
	if o != nil && !IsNil(o.ParserVersion) {
		return true
	}

	return false
}

// SetParserVersion gets a reference to the given string and assigns it to the ParserVersion field.
func (o *GetServerHardwareScanResult) SetParserVersion(v string) {
	o.ParserVersion = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GetServerHardwareScanResult) GetResult() Results {
	if o == nil || IsNil(o.Result) {
		var ret Results
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerHardwareScanResult) GetResultOk() (*Results, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GetServerHardwareScanResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given Results and assigns it to the Result field.
func (o *GetServerHardwareScanResult) SetResult(v Results) {
	o.Result = &v
}

// GetScannedAt returns the ScannedAt field value if set, zero value otherwise.
func (o *GetServerHardwareScanResult) GetScannedAt() string {
	if o == nil || IsNil(o.ScannedAt) {
		var ret string
		return ret
	}
	return *o.ScannedAt
}

// GetScannedAtOk returns a tuple with the ScannedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerHardwareScanResult) GetScannedAtOk() (*string, bool) {
	if o == nil || IsNil(o.ScannedAt) {
		return nil, false
	}
	return o.ScannedAt, true
}

// HasScannedAt returns a boolean if a field has been set.
func (o *GetServerHardwareScanResult) HasScannedAt() bool {
	if o != nil && !IsNil(o.ScannedAt) {
		return true
	}

	return false
}

// SetScannedAt gets a reference to the given string and assigns it to the ScannedAt field.
func (o *GetServerHardwareScanResult) SetScannedAt(v string) {
	o.ScannedAt = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *GetServerHardwareScanResult) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerHardwareScanResult) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *GetServerHardwareScanResult) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *GetServerHardwareScanResult) SetServerId(v string) {
	o.ServerId = &v
}

func (o GetServerHardwareScanResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetServerHardwareScanResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ParserVersion) {
		toSerialize["parserVersion"] = o.ParserVersion
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.ScannedAt) {
		toSerialize["scannedAt"] = o.ScannedAt
	}
	if !IsNil(o.ServerId) {
		toSerialize["serverId"] = o.ServerId
	}
	return toSerialize, nil
}

type NullableGetServerHardwareScanResult struct {
	value *GetServerHardwareScanResult
	isSet bool
}

func (v NullableGetServerHardwareScanResult) Get() *GetServerHardwareScanResult {
	return v.value
}

func (v *NullableGetServerHardwareScanResult) Set(val *GetServerHardwareScanResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServerHardwareScanResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServerHardwareScanResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServerHardwareScanResult(val *GetServerHardwareScanResult) *NullableGetServerHardwareScanResult {
	return &NullableGetServerHardwareScanResult{value: val, isSet: true}
}

func (v NullableGetServerHardwareScanResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServerHardwareScanResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


