/*
bmsdb

This documents the rest api bmsdb provides.

API version: v2
Contact: development-networkautomation@leaseweb.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bmsdb

import (
	"encoding/json"
)

// checks if the HardwareScan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HardwareScan{}

// HardwareScan struct for HardwareScan
type HardwareScan struct {
	// Hardware Scan id
	Id *string `json:"id,omitempty"`
	ParserVersion *string `json:"parserVersion,omitempty"`
	// Date time using the ISO-8601 format
	ScannedAt *string `json:"scannedAt,omitempty"`
	ServerId *string `json:"serverId,omitempty"`
}

// NewHardwareScan instantiates a new HardwareScan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHardwareScan() *HardwareScan {
	this := HardwareScan{}
	return &this
}

// NewHardwareScanWithDefaults instantiates a new HardwareScan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHardwareScanWithDefaults() *HardwareScan {
	this := HardwareScan{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HardwareScan) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareScan) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HardwareScan) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *HardwareScan) SetId(v string) {
	o.Id = &v
}

// GetParserVersion returns the ParserVersion field value if set, zero value otherwise.
func (o *HardwareScan) GetParserVersion() string {
	if o == nil || IsNil(o.ParserVersion) {
		var ret string
		return ret
	}
	return *o.ParserVersion
}

// GetParserVersionOk returns a tuple with the ParserVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareScan) GetParserVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ParserVersion) {
		return nil, false
	}
	return o.ParserVersion, true
}

// HasParserVersion returns a boolean if a field has been set.
func (o *HardwareScan) HasParserVersion() bool {
	if o != nil && !IsNil(o.ParserVersion) {
		return true
	}

	return false
}

// SetParserVersion gets a reference to the given string and assigns it to the ParserVersion field.
func (o *HardwareScan) SetParserVersion(v string) {
	o.ParserVersion = &v
}

// GetScannedAt returns the ScannedAt field value if set, zero value otherwise.
func (o *HardwareScan) GetScannedAt() string {
	if o == nil || IsNil(o.ScannedAt) {
		var ret string
		return ret
	}
	return *o.ScannedAt
}

// GetScannedAtOk returns a tuple with the ScannedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareScan) GetScannedAtOk() (*string, bool) {
	if o == nil || IsNil(o.ScannedAt) {
		return nil, false
	}
	return o.ScannedAt, true
}

// HasScannedAt returns a boolean if a field has been set.
func (o *HardwareScan) HasScannedAt() bool {
	if o != nil && !IsNil(o.ScannedAt) {
		return true
	}

	return false
}

// SetScannedAt gets a reference to the given string and assigns it to the ScannedAt field.
func (o *HardwareScan) SetScannedAt(v string) {
	o.ScannedAt = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *HardwareScan) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareScan) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *HardwareScan) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *HardwareScan) SetServerId(v string) {
	o.ServerId = &v
}

func (o HardwareScan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HardwareScan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ParserVersion) {
		toSerialize["parserVersion"] = o.ParserVersion
	}
	if !IsNil(o.ScannedAt) {
		toSerialize["scannedAt"] = o.ScannedAt
	}
	if !IsNil(o.ServerId) {
		toSerialize["serverId"] = o.ServerId
	}
	return toSerialize, nil
}

type NullableHardwareScan struct {
	value *HardwareScan
	isSet bool
}

func (v NullableHardwareScan) Get() *HardwareScan {
	return v.value
}

func (v *NullableHardwareScan) Set(val *HardwareScan) {
	v.value = val
	v.isSet = true
}

func (v NullableHardwareScan) IsSet() bool {
	return v.isSet
}

func (v *NullableHardwareScan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHardwareScan(val *HardwareScan) *NullableHardwareScan {
	return &NullableHardwareScan{value: val, isSet: true}
}

func (v NullableHardwareScan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHardwareScan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


