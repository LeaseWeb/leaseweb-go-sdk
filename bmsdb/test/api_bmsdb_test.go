/*
bmsdb

Testing BmsdbAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package bmsdb

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/leaseweb/leaseweb-go-sdk/bmsdb"
)

func Test_bmsdb_BmsdbAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test BmsdbAPIService GetServerHardware", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var serverId string

		resp, httpRes, err := apiClient.BmsdbAPI.GetServerHardware(context.Background(), serverId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BmsdbAPIService GetServerHardwareScan", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var serverId string
		var hardwareScanId string

		resp, httpRes, err := apiClient.BmsdbAPI.GetServerHardwareScan(context.Background(), serverId, hardwareScanId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BmsdbAPIService ServersHardwarescansList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var serverId string

		resp, httpRes, err := apiClient.BmsdbAPI.ServersHardwarescansList(context.Background(), serverId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
