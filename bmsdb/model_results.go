/*
bmsdb

This documents the rest api bmsdb provides.

API version: v2
Contact: development-networkautomation@leaseweb.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bmsdb

import (
	"encoding/json"
)

// checks if the Results type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Results{}

// Results Hardware Scan results
type Results struct {
	Chassis map[string]interface{} `json:"chassis,omitempty"`
	Cpu []map[string]interface{} `json:"cpu,omitempty"`
	Disks []map[string]interface{} `json:"disks,omitempty"`
	Ipmi map[string]interface{} `json:"ipmi,omitempty"`
	Memory []map[string]interface{} `json:"memory,omitempty"`
	Network []map[string]interface{} `json:"network,omitempty"`
}

// NewResults instantiates a new Results object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResults() *Results {
	this := Results{}
	return &this
}

// NewResultsWithDefaults instantiates a new Results object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResultsWithDefaults() *Results {
	this := Results{}
	return &this
}

// GetChassis returns the Chassis field value if set, zero value otherwise.
func (o *Results) GetChassis() map[string]interface{} {
	if o == nil || IsNil(o.Chassis) {
		var ret map[string]interface{}
		return ret
	}
	return o.Chassis
}

// GetChassisOk returns a tuple with the Chassis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Results) GetChassisOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Chassis) {
		return map[string]interface{}{}, false
	}
	return o.Chassis, true
}

// HasChassis returns a boolean if a field has been set.
func (o *Results) HasChassis() bool {
	if o != nil && !IsNil(o.Chassis) {
		return true
	}

	return false
}

// SetChassis gets a reference to the given map[string]interface{} and assigns it to the Chassis field.
func (o *Results) SetChassis(v map[string]interface{}) {
	o.Chassis = v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *Results) GetCpu() []map[string]interface{} {
	if o == nil || IsNil(o.Cpu) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Results) GetCpuOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *Results) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given []map[string]interface{} and assigns it to the Cpu field.
func (o *Results) SetCpu(v []map[string]interface{}) {
	o.Cpu = v
}

// GetDisks returns the Disks field value if set, zero value otherwise.
func (o *Results) GetDisks() []map[string]interface{} {
	if o == nil || IsNil(o.Disks) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Disks
}

// GetDisksOk returns a tuple with the Disks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Results) GetDisksOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Disks) {
		return nil, false
	}
	return o.Disks, true
}

// HasDisks returns a boolean if a field has been set.
func (o *Results) HasDisks() bool {
	if o != nil && !IsNil(o.Disks) {
		return true
	}

	return false
}

// SetDisks gets a reference to the given []map[string]interface{} and assigns it to the Disks field.
func (o *Results) SetDisks(v []map[string]interface{}) {
	o.Disks = v
}

// GetIpmi returns the Ipmi field value if set, zero value otherwise.
func (o *Results) GetIpmi() map[string]interface{} {
	if o == nil || IsNil(o.Ipmi) {
		var ret map[string]interface{}
		return ret
	}
	return o.Ipmi
}

// GetIpmiOk returns a tuple with the Ipmi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Results) GetIpmiOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Ipmi) {
		return map[string]interface{}{}, false
	}
	return o.Ipmi, true
}

// HasIpmi returns a boolean if a field has been set.
func (o *Results) HasIpmi() bool {
	if o != nil && !IsNil(o.Ipmi) {
		return true
	}

	return false
}

// SetIpmi gets a reference to the given map[string]interface{} and assigns it to the Ipmi field.
func (o *Results) SetIpmi(v map[string]interface{}) {
	o.Ipmi = v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *Results) GetMemory() []map[string]interface{} {
	if o == nil || IsNil(o.Memory) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Results) GetMemoryOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *Results) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given []map[string]interface{} and assigns it to the Memory field.
func (o *Results) SetMemory(v []map[string]interface{}) {
	o.Memory = v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *Results) GetNetwork() []map[string]interface{} {
	if o == nil || IsNil(o.Network) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Results) GetNetworkOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *Results) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given []map[string]interface{} and assigns it to the Network field.
func (o *Results) SetNetwork(v []map[string]interface{}) {
	o.Network = v
}

func (o Results) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Results) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Chassis) {
		toSerialize["chassis"] = o.Chassis
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Disks) {
		toSerialize["disks"] = o.Disks
	}
	if !IsNil(o.Ipmi) {
		toSerialize["ipmi"] = o.Ipmi
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	return toSerialize, nil
}

type NullableResults struct {
	value *Results
	isSet bool
}

func (v NullableResults) Get() *Results {
	return v.value
}

func (v *NullableResults) Set(val *Results) {
	v.value = val
	v.isSet = true
}

func (v NullableResults) IsSet() bool {
	return v.isSet
}

func (v *NullableResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResults(val *Results) *NullableResults {
	return &NullableResults{value: val, isSet: true}
}

func (v NullableResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


