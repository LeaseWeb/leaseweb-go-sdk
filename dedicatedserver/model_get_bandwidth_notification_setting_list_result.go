/*
Dedicated Servers

This is the description of the Dedicated Server API.  The base url of this API is `https://api.leaseweb.com`.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicatedserver

import (
	"encoding/json"
)

// checks if the GetBandwidthNotificationSettingListResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBandwidthNotificationSettingListResult{}

// GetBandwidthNotificationSettingListResult struct for GetBandwidthNotificationSettingListResult
type GetBandwidthNotificationSettingListResult struct {
	Metadata *Metadata `json:"_metadata,omitempty"`
	// An array of Bandwidth Notification Settings
	BandwidthNotificationSettings []BandwidthNotificationSetting `json:"bandwidthNotificationSettings,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetBandwidthNotificationSettingListResult GetBandwidthNotificationSettingListResult

// NewGetBandwidthNotificationSettingListResult instantiates a new GetBandwidthNotificationSettingListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBandwidthNotificationSettingListResult() *GetBandwidthNotificationSettingListResult {
	this := GetBandwidthNotificationSettingListResult{}
	return &this
}

// NewGetBandwidthNotificationSettingListResultWithDefaults instantiates a new GetBandwidthNotificationSettingListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBandwidthNotificationSettingListResultWithDefaults() *GetBandwidthNotificationSettingListResult {
	this := GetBandwidthNotificationSettingListResult{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GetBandwidthNotificationSettingListResult) GetMetadata() Metadata {
	if o == nil || IsNil(o.Metadata) {
		var ret Metadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBandwidthNotificationSettingListResult) GetMetadataOk() (*Metadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GetBandwidthNotificationSettingListResult) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given Metadata and assigns it to the Metadata field.
func (o *GetBandwidthNotificationSettingListResult) SetMetadata(v Metadata) {
	o.Metadata = &v
}

// GetBandwidthNotificationSettings returns the BandwidthNotificationSettings field value if set, zero value otherwise.
func (o *GetBandwidthNotificationSettingListResult) GetBandwidthNotificationSettings() []BandwidthNotificationSetting {
	if o == nil || IsNil(o.BandwidthNotificationSettings) {
		var ret []BandwidthNotificationSetting
		return ret
	}
	return o.BandwidthNotificationSettings
}

// GetBandwidthNotificationSettingsOk returns a tuple with the BandwidthNotificationSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBandwidthNotificationSettingListResult) GetBandwidthNotificationSettingsOk() ([]BandwidthNotificationSetting, bool) {
	if o == nil || IsNil(o.BandwidthNotificationSettings) {
		return nil, false
	}
	return o.BandwidthNotificationSettings, true
}

// HasBandwidthNotificationSettings returns a boolean if a field has been set.
func (o *GetBandwidthNotificationSettingListResult) HasBandwidthNotificationSettings() bool {
	if o != nil && !IsNil(o.BandwidthNotificationSettings) {
		return true
	}

	return false
}

// SetBandwidthNotificationSettings gets a reference to the given []BandwidthNotificationSetting and assigns it to the BandwidthNotificationSettings field.
func (o *GetBandwidthNotificationSettingListResult) SetBandwidthNotificationSettings(v []BandwidthNotificationSetting) {
	o.BandwidthNotificationSettings = v
}

func (o GetBandwidthNotificationSettingListResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBandwidthNotificationSettingListResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["_metadata"] = o.Metadata
	}
	if !IsNil(o.BandwidthNotificationSettings) {
		toSerialize["bandwidthNotificationSettings"] = o.BandwidthNotificationSettings
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetBandwidthNotificationSettingListResult) UnmarshalJSON(data []byte) (err error) {
	varGetBandwidthNotificationSettingListResult := _GetBandwidthNotificationSettingListResult{}

	err = json.Unmarshal(data, &varGetBandwidthNotificationSettingListResult)

	if err != nil {
		return err
	}

	*o = GetBandwidthNotificationSettingListResult(varGetBandwidthNotificationSettingListResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "_metadata")
		delete(additionalProperties, "bandwidthNotificationSettings")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetBandwidthNotificationSettingListResult struct {
	value *GetBandwidthNotificationSettingListResult
	isSet bool
}

func (v NullableGetBandwidthNotificationSettingListResult) Get() *GetBandwidthNotificationSettingListResult {
	return v.value
}

func (v *NullableGetBandwidthNotificationSettingListResult) Set(val *GetBandwidthNotificationSettingListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBandwidthNotificationSettingListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBandwidthNotificationSettingListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBandwidthNotificationSettingListResult(val *GetBandwidthNotificationSettingListResult) *NullableGetBandwidthNotificationSettingListResult {
	return &NullableGetBandwidthNotificationSettingListResult{value: val, isSet: true}
}

func (v NullableGetBandwidthNotificationSettingListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBandwidthNotificationSettingListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


