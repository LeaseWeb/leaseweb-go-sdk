/*
LeaseWeb API for launching and managing Public Cloud instances

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.  <div class=\"badge\">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publicCloud

import (
	"encoding/json"
	"time"
)

// checks if the CpuMetricsValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CpuMetricsValue{}

// CpuMetricsValue struct for CpuMetricsValue
type CpuMetricsValue struct {
	// CPU usage
	Value *float32 `json:"value,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CpuMetricsValue CpuMetricsValue

// NewCpuMetricsValue instantiates a new CpuMetricsValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCpuMetricsValue() *CpuMetricsValue {
	this := CpuMetricsValue{}
	return &this
}

// NewCpuMetricsValueWithDefaults instantiates a new CpuMetricsValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCpuMetricsValueWithDefaults() *CpuMetricsValue {
	this := CpuMetricsValue{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CpuMetricsValue) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuMetricsValue) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CpuMetricsValue) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *CpuMetricsValue) SetValue(v float32) {
	o.Value = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *CpuMetricsValue) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuMetricsValue) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *CpuMetricsValue) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *CpuMetricsValue) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

func (o CpuMetricsValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CpuMetricsValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CpuMetricsValue) UnmarshalJSON(data []byte) (err error) {
	varCpuMetricsValue := _CpuMetricsValue{}

	err = json.Unmarshal(data, &varCpuMetricsValue)

	if err != nil {
		return err
	}

	*o = CpuMetricsValue(varCpuMetricsValue)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "value")
		delete(additionalProperties, "timestamp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCpuMetricsValue struct {
	value *CpuMetricsValue
	isSet bool
}

func (v NullableCpuMetricsValue) Get() *CpuMetricsValue {
	return v.value
}

func (v *NullableCpuMetricsValue) Set(val *CpuMetricsValue) {
	v.value = val
	v.isSet = true
}

func (v NullableCpuMetricsValue) IsSet() bool {
	return v.isSet
}

func (v *NullableCpuMetricsValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCpuMetricsValue(val *CpuMetricsValue) *NullableCpuMetricsValue {
	return &NullableCpuMetricsValue{value: val, isSet: true}
}

func (v NullableCpuMetricsValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCpuMetricsValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


