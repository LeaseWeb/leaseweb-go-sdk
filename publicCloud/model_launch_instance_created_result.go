/*
LeaseWeb API for launching and managing Public Cloud instances

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.  <div class=\"badge\">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publicCloud

import (
	"encoding/json"
	"time"
)

// checks if the LaunchInstanceCreatedResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LaunchInstanceCreatedResult{}

// LaunchInstanceCreatedResult struct for LaunchInstanceCreatedResult
type LaunchInstanceCreatedResult struct {
	// The customer ID who owns the instance
	CustomerId *string `json:"customerId,omitempty"`
	// The instance unique identifier
	Id *string `json:"id,omitempty"`
	Resources *InstanceResources `json:"resources,omitempty"`
	// The region where the instance was launched into
	Region *string `json:"region,omitempty"`
	// The identifying name set to the instance
	Reference *string `json:"reference,omitempty"`
	OperatingSystem *OperatingSystem `json:"operatingSystem,omitempty"`
	State *InstanceState `json:"state,omitempty"`
	PublicIpV4 *bool `json:"publicIpV4,omitempty"`
	// Instance type
	Type *string `json:"type,omitempty"`
	PrivateNetwork *bool `json:"privateNetwork,omitempty"`
	// The root disk size as specified during its launch or update, in GB
	RootDiskSize *int32 `json:"rootDiskSize,omitempty"`
	// The root disk's storage type
	RootDiskStorageType *string `json:"rootDiskStorageType,omitempty"`
	Ips []Ip `json:"ips,omitempty"`
	BillingFrequency *int32 `json:"billingFrequency,omitempty"`
	// The contract commitment (in months)
	ContractTerm *int32 `json:"contractTerm,omitempty"`
	ContractType *ContractType `json:"contractType,omitempty"`
	ContractEndsAt NullableTime `json:"contractEndsAt,omitempty"`
	// Date and time when the instance was started for the first time, right after launching it
	StartedAt NullableTime `json:"startedAt,omitempty"`
	// Date when the contract will be automatically renewed
	ContractRenewalsAt *time.Time `json:"contractRenewalsAt,omitempty"`
	// Date when the contract was created
	ContractCreatedAt *time.Time `json:"contractCreatedAt,omitempty"`
	Iso NullableIso `json:"iso,omitempty"`
	// The market app ID which was deployed in the instance, if any
	MarketAppId NullableString `json:"marketAppId,omitempty"`
}

// NewLaunchInstanceCreatedResult instantiates a new LaunchInstanceCreatedResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLaunchInstanceCreatedResult() *LaunchInstanceCreatedResult {
	this := LaunchInstanceCreatedResult{}
	return &this
}

// NewLaunchInstanceCreatedResultWithDefaults instantiates a new LaunchInstanceCreatedResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLaunchInstanceCreatedResultWithDefaults() *LaunchInstanceCreatedResult {
	this := LaunchInstanceCreatedResult{}
	return &this
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *LaunchInstanceCreatedResult) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LaunchInstanceCreatedResult) SetId(v string) {
	o.Id = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetResources() InstanceResources {
	if o == nil || IsNil(o.Resources) {
		var ret InstanceResources
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetResourcesOk() (*InstanceResources, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given InstanceResources and assigns it to the Resources field.
func (o *LaunchInstanceCreatedResult) SetResources(v InstanceResources) {
	o.Resources = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *LaunchInstanceCreatedResult) SetRegion(v string) {
	o.Region = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *LaunchInstanceCreatedResult) SetReference(v string) {
	o.Reference = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetOperatingSystem() OperatingSystem {
	if o == nil || IsNil(o.OperatingSystem) {
		var ret OperatingSystem
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetOperatingSystemOk() (*OperatingSystem, bool) {
	if o == nil || IsNil(o.OperatingSystem) {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasOperatingSystem() bool {
	if o != nil && !IsNil(o.OperatingSystem) {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given OperatingSystem and assigns it to the OperatingSystem field.
func (o *LaunchInstanceCreatedResult) SetOperatingSystem(v OperatingSystem) {
	o.OperatingSystem = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetState() InstanceState {
	if o == nil || IsNil(o.State) {
		var ret InstanceState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetStateOk() (*InstanceState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given InstanceState and assigns it to the State field.
func (o *LaunchInstanceCreatedResult) SetState(v InstanceState) {
	o.State = &v
}

// GetPublicIpV4 returns the PublicIpV4 field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetPublicIpV4() bool {
	if o == nil || IsNil(o.PublicIpV4) {
		var ret bool
		return ret
	}
	return *o.PublicIpV4
}

// GetPublicIpV4Ok returns a tuple with the PublicIpV4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetPublicIpV4Ok() (*bool, bool) {
	if o == nil || IsNil(o.PublicIpV4) {
		return nil, false
	}
	return o.PublicIpV4, true
}

// HasPublicIpV4 returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasPublicIpV4() bool {
	if o != nil && !IsNil(o.PublicIpV4) {
		return true
	}

	return false
}

// SetPublicIpV4 gets a reference to the given bool and assigns it to the PublicIpV4 field.
func (o *LaunchInstanceCreatedResult) SetPublicIpV4(v bool) {
	o.PublicIpV4 = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *LaunchInstanceCreatedResult) SetType(v string) {
	o.Type = &v
}

// GetPrivateNetwork returns the PrivateNetwork field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetPrivateNetwork() bool {
	if o == nil || IsNil(o.PrivateNetwork) {
		var ret bool
		return ret
	}
	return *o.PrivateNetwork
}

// GetPrivateNetworkOk returns a tuple with the PrivateNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetPrivateNetworkOk() (*bool, bool) {
	if o == nil || IsNil(o.PrivateNetwork) {
		return nil, false
	}
	return o.PrivateNetwork, true
}

// HasPrivateNetwork returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasPrivateNetwork() bool {
	if o != nil && !IsNil(o.PrivateNetwork) {
		return true
	}

	return false
}

// SetPrivateNetwork gets a reference to the given bool and assigns it to the PrivateNetwork field.
func (o *LaunchInstanceCreatedResult) SetPrivateNetwork(v bool) {
	o.PrivateNetwork = &v
}

// GetRootDiskSize returns the RootDiskSize field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetRootDiskSize() int32 {
	if o == nil || IsNil(o.RootDiskSize) {
		var ret int32
		return ret
	}
	return *o.RootDiskSize
}

// GetRootDiskSizeOk returns a tuple with the RootDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetRootDiskSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.RootDiskSize) {
		return nil, false
	}
	return o.RootDiskSize, true
}

// HasRootDiskSize returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasRootDiskSize() bool {
	if o != nil && !IsNil(o.RootDiskSize) {
		return true
	}

	return false
}

// SetRootDiskSize gets a reference to the given int32 and assigns it to the RootDiskSize field.
func (o *LaunchInstanceCreatedResult) SetRootDiskSize(v int32) {
	o.RootDiskSize = &v
}

// GetRootDiskStorageType returns the RootDiskStorageType field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetRootDiskStorageType() string {
	if o == nil || IsNil(o.RootDiskStorageType) {
		var ret string
		return ret
	}
	return *o.RootDiskStorageType
}

// GetRootDiskStorageTypeOk returns a tuple with the RootDiskStorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetRootDiskStorageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RootDiskStorageType) {
		return nil, false
	}
	return o.RootDiskStorageType, true
}

// HasRootDiskStorageType returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasRootDiskStorageType() bool {
	if o != nil && !IsNil(o.RootDiskStorageType) {
		return true
	}

	return false
}

// SetRootDiskStorageType gets a reference to the given string and assigns it to the RootDiskStorageType field.
func (o *LaunchInstanceCreatedResult) SetRootDiskStorageType(v string) {
	o.RootDiskStorageType = &v
}

// GetIps returns the Ips field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetIps() []Ip {
	if o == nil || IsNil(o.Ips) {
		var ret []Ip
		return ret
	}
	return o.Ips
}

// GetIpsOk returns a tuple with the Ips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetIpsOk() ([]Ip, bool) {
	if o == nil || IsNil(o.Ips) {
		return nil, false
	}
	return o.Ips, true
}

// HasIps returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasIps() bool {
	if o != nil && !IsNil(o.Ips) {
		return true
	}

	return false
}

// SetIps gets a reference to the given []Ip and assigns it to the Ips field.
func (o *LaunchInstanceCreatedResult) SetIps(v []Ip) {
	o.Ips = v
}

// GetBillingFrequency returns the BillingFrequency field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetBillingFrequency() int32 {
	if o == nil || IsNil(o.BillingFrequency) {
		var ret int32
		return ret
	}
	return *o.BillingFrequency
}

// GetBillingFrequencyOk returns a tuple with the BillingFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetBillingFrequencyOk() (*int32, bool) {
	if o == nil || IsNil(o.BillingFrequency) {
		return nil, false
	}
	return o.BillingFrequency, true
}

// HasBillingFrequency returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasBillingFrequency() bool {
	if o != nil && !IsNil(o.BillingFrequency) {
		return true
	}

	return false
}

// SetBillingFrequency gets a reference to the given int32 and assigns it to the BillingFrequency field.
func (o *LaunchInstanceCreatedResult) SetBillingFrequency(v int32) {
	o.BillingFrequency = &v
}

// GetContractTerm returns the ContractTerm field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetContractTerm() int32 {
	if o == nil || IsNil(o.ContractTerm) {
		var ret int32
		return ret
	}
	return *o.ContractTerm
}

// GetContractTermOk returns a tuple with the ContractTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetContractTermOk() (*int32, bool) {
	if o == nil || IsNil(o.ContractTerm) {
		return nil, false
	}
	return o.ContractTerm, true
}

// HasContractTerm returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasContractTerm() bool {
	if o != nil && !IsNil(o.ContractTerm) {
		return true
	}

	return false
}

// SetContractTerm gets a reference to the given int32 and assigns it to the ContractTerm field.
func (o *LaunchInstanceCreatedResult) SetContractTerm(v int32) {
	o.ContractTerm = &v
}

// GetContractType returns the ContractType field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetContractType() ContractType {
	if o == nil || IsNil(o.ContractType) {
		var ret ContractType
		return ret
	}
	return *o.ContractType
}

// GetContractTypeOk returns a tuple with the ContractType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetContractTypeOk() (*ContractType, bool) {
	if o == nil || IsNil(o.ContractType) {
		return nil, false
	}
	return o.ContractType, true
}

// HasContractType returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasContractType() bool {
	if o != nil && !IsNil(o.ContractType) {
		return true
	}

	return false
}

// SetContractType gets a reference to the given ContractType and assigns it to the ContractType field.
func (o *LaunchInstanceCreatedResult) SetContractType(v ContractType) {
	o.ContractType = &v
}

// GetContractEndsAt returns the ContractEndsAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LaunchInstanceCreatedResult) GetContractEndsAt() time.Time {
	if o == nil || IsNil(o.ContractEndsAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ContractEndsAt.Get()
}

// GetContractEndsAtOk returns a tuple with the ContractEndsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LaunchInstanceCreatedResult) GetContractEndsAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractEndsAt.Get(), o.ContractEndsAt.IsSet()
}

// HasContractEndsAt returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasContractEndsAt() bool {
	if o != nil && o.ContractEndsAt.IsSet() {
		return true
	}

	return false
}

// SetContractEndsAt gets a reference to the given NullableTime and assigns it to the ContractEndsAt field.
func (o *LaunchInstanceCreatedResult) SetContractEndsAt(v time.Time) {
	o.ContractEndsAt.Set(&v)
}
// SetContractEndsAtNil sets the value for ContractEndsAt to be an explicit nil
func (o *LaunchInstanceCreatedResult) SetContractEndsAtNil() {
	o.ContractEndsAt.Set(nil)
}

// UnsetContractEndsAt ensures that no value is present for ContractEndsAt, not even an explicit nil
func (o *LaunchInstanceCreatedResult) UnsetContractEndsAt() {
	o.ContractEndsAt.Unset()
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LaunchInstanceCreatedResult) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt.Get()
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LaunchInstanceCreatedResult) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedAt.Get(), o.StartedAt.IsSet()
}

// HasStartedAt returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasStartedAt() bool {
	if o != nil && o.StartedAt.IsSet() {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given NullableTime and assigns it to the StartedAt field.
func (o *LaunchInstanceCreatedResult) SetStartedAt(v time.Time) {
	o.StartedAt.Set(&v)
}
// SetStartedAtNil sets the value for StartedAt to be an explicit nil
func (o *LaunchInstanceCreatedResult) SetStartedAtNil() {
	o.StartedAt.Set(nil)
}

// UnsetStartedAt ensures that no value is present for StartedAt, not even an explicit nil
func (o *LaunchInstanceCreatedResult) UnsetStartedAt() {
	o.StartedAt.Unset()
}

// GetContractRenewalsAt returns the ContractRenewalsAt field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetContractRenewalsAt() time.Time {
	if o == nil || IsNil(o.ContractRenewalsAt) {
		var ret time.Time
		return ret
	}
	return *o.ContractRenewalsAt
}

// GetContractRenewalsAtOk returns a tuple with the ContractRenewalsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetContractRenewalsAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ContractRenewalsAt) {
		return nil, false
	}
	return o.ContractRenewalsAt, true
}

// HasContractRenewalsAt returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasContractRenewalsAt() bool {
	if o != nil && !IsNil(o.ContractRenewalsAt) {
		return true
	}

	return false
}

// SetContractRenewalsAt gets a reference to the given time.Time and assigns it to the ContractRenewalsAt field.
func (o *LaunchInstanceCreatedResult) SetContractRenewalsAt(v time.Time) {
	o.ContractRenewalsAt = &v
}

// GetContractCreatedAt returns the ContractCreatedAt field value if set, zero value otherwise.
func (o *LaunchInstanceCreatedResult) GetContractCreatedAt() time.Time {
	if o == nil || IsNil(o.ContractCreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.ContractCreatedAt
}

// GetContractCreatedAtOk returns a tuple with the ContractCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchInstanceCreatedResult) GetContractCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ContractCreatedAt) {
		return nil, false
	}
	return o.ContractCreatedAt, true
}

// HasContractCreatedAt returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasContractCreatedAt() bool {
	if o != nil && !IsNil(o.ContractCreatedAt) {
		return true
	}

	return false
}

// SetContractCreatedAt gets a reference to the given time.Time and assigns it to the ContractCreatedAt field.
func (o *LaunchInstanceCreatedResult) SetContractCreatedAt(v time.Time) {
	o.ContractCreatedAt = &v
}

// GetIso returns the Iso field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LaunchInstanceCreatedResult) GetIso() Iso {
	if o == nil || IsNil(o.Iso.Get()) {
		var ret Iso
		return ret
	}
	return *o.Iso.Get()
}

// GetIsoOk returns a tuple with the Iso field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LaunchInstanceCreatedResult) GetIsoOk() (*Iso, bool) {
	if o == nil {
		return nil, false
	}
	return o.Iso.Get(), o.Iso.IsSet()
}

// HasIso returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasIso() bool {
	if o != nil && o.Iso.IsSet() {
		return true
	}

	return false
}

// SetIso gets a reference to the given NullableIso and assigns it to the Iso field.
func (o *LaunchInstanceCreatedResult) SetIso(v Iso) {
	o.Iso.Set(&v)
}
// SetIsoNil sets the value for Iso to be an explicit nil
func (o *LaunchInstanceCreatedResult) SetIsoNil() {
	o.Iso.Set(nil)
}

// UnsetIso ensures that no value is present for Iso, not even an explicit nil
func (o *LaunchInstanceCreatedResult) UnsetIso() {
	o.Iso.Unset()
}

// GetMarketAppId returns the MarketAppId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LaunchInstanceCreatedResult) GetMarketAppId() string {
	if o == nil || IsNil(o.MarketAppId.Get()) {
		var ret string
		return ret
	}
	return *o.MarketAppId.Get()
}

// GetMarketAppIdOk returns a tuple with the MarketAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LaunchInstanceCreatedResult) GetMarketAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarketAppId.Get(), o.MarketAppId.IsSet()
}

// HasMarketAppId returns a boolean if a field has been set.
func (o *LaunchInstanceCreatedResult) HasMarketAppId() bool {
	if o != nil && o.MarketAppId.IsSet() {
		return true
	}

	return false
}

// SetMarketAppId gets a reference to the given NullableString and assigns it to the MarketAppId field.
func (o *LaunchInstanceCreatedResult) SetMarketAppId(v string) {
	o.MarketAppId.Set(&v)
}
// SetMarketAppIdNil sets the value for MarketAppId to be an explicit nil
func (o *LaunchInstanceCreatedResult) SetMarketAppIdNil() {
	o.MarketAppId.Set(nil)
}

// UnsetMarketAppId ensures that no value is present for MarketAppId, not even an explicit nil
func (o *LaunchInstanceCreatedResult) UnsetMarketAppId() {
	o.MarketAppId.Unset()
}

func (o LaunchInstanceCreatedResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LaunchInstanceCreatedResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.OperatingSystem) {
		toSerialize["operatingSystem"] = o.OperatingSystem
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.PublicIpV4) {
		toSerialize["publicIpV4"] = o.PublicIpV4
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.PrivateNetwork) {
		toSerialize["privateNetwork"] = o.PrivateNetwork
	}
	if !IsNil(o.RootDiskSize) {
		toSerialize["rootDiskSize"] = o.RootDiskSize
	}
	if !IsNil(o.RootDiskStorageType) {
		toSerialize["rootDiskStorageType"] = o.RootDiskStorageType
	}
	if !IsNil(o.Ips) {
		toSerialize["ips"] = o.Ips
	}
	if !IsNil(o.BillingFrequency) {
		toSerialize["billingFrequency"] = o.BillingFrequency
	}
	if !IsNil(o.ContractTerm) {
		toSerialize["contractTerm"] = o.ContractTerm
	}
	if !IsNil(o.ContractType) {
		toSerialize["contractType"] = o.ContractType
	}
	if o.ContractEndsAt.IsSet() {
		toSerialize["contractEndsAt"] = o.ContractEndsAt.Get()
	}
	if o.StartedAt.IsSet() {
		toSerialize["startedAt"] = o.StartedAt.Get()
	}
	if !IsNil(o.ContractRenewalsAt) {
		toSerialize["contractRenewalsAt"] = o.ContractRenewalsAt
	}
	if !IsNil(o.ContractCreatedAt) {
		toSerialize["contractCreatedAt"] = o.ContractCreatedAt
	}
	if o.Iso.IsSet() {
		toSerialize["iso"] = o.Iso.Get()
	}
	if o.MarketAppId.IsSet() {
		toSerialize["marketAppId"] = o.MarketAppId.Get()
	}
	return toSerialize, nil
}

type NullableLaunchInstanceCreatedResult struct {
	value *LaunchInstanceCreatedResult
	isSet bool
}

func (v NullableLaunchInstanceCreatedResult) Get() *LaunchInstanceCreatedResult {
	return v.value
}

func (v *NullableLaunchInstanceCreatedResult) Set(val *LaunchInstanceCreatedResult) {
	v.value = val
	v.isSet = true
}

func (v NullableLaunchInstanceCreatedResult) IsSet() bool {
	return v.isSet
}

func (v *NullableLaunchInstanceCreatedResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLaunchInstanceCreatedResult(val *LaunchInstanceCreatedResult) *NullableLaunchInstanceCreatedResult {
	return &NullableLaunchInstanceCreatedResult{value: val, isSet: true}
}

func (v NullableLaunchInstanceCreatedResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLaunchInstanceCreatedResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


