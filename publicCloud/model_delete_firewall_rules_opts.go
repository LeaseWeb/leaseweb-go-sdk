/*
LeaseWeb API for launching and managing Public Cloud instances

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.  <div class=\"badge\">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publicCloud

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeleteFirewallRulesOpts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteFirewallRulesOpts{}

// DeleteFirewallRulesOpts struct for DeleteFirewallRulesOpts
type DeleteFirewallRulesOpts struct {
	Rules []DeletionRule `json:"rules"`
}

type _DeleteFirewallRulesOpts DeleteFirewallRulesOpts

// NewDeleteFirewallRulesOpts instantiates a new DeleteFirewallRulesOpts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteFirewallRulesOpts(rules []DeletionRule) *DeleteFirewallRulesOpts {
	this := DeleteFirewallRulesOpts{}
	this.Rules = rules
	return &this
}

// NewDeleteFirewallRulesOptsWithDefaults instantiates a new DeleteFirewallRulesOpts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteFirewallRulesOptsWithDefaults() *DeleteFirewallRulesOpts {
	this := DeleteFirewallRulesOpts{}
	return &this
}

// GetRules returns the Rules field value
func (o *DeleteFirewallRulesOpts) GetRules() []DeletionRule {
	if o == nil {
		var ret []DeletionRule
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *DeleteFirewallRulesOpts) GetRulesOk() ([]DeletionRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *DeleteFirewallRulesOpts) SetRules(v []DeletionRule) {
	o.Rules = v
}

func (o DeleteFirewallRulesOpts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteFirewallRulesOpts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rules"] = o.Rules
	return toSerialize, nil
}

func (o *DeleteFirewallRulesOpts) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rules",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteFirewallRulesOpts := _DeleteFirewallRulesOpts{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteFirewallRulesOpts)

	if err != nil {
		return err
	}

	*o = DeleteFirewallRulesOpts(varDeleteFirewallRulesOpts)

	return err
}

type NullableDeleteFirewallRulesOpts struct {
	value *DeleteFirewallRulesOpts
	isSet bool
}

func (v NullableDeleteFirewallRulesOpts) Get() *DeleteFirewallRulesOpts {
	return v.value
}

func (v *NullableDeleteFirewallRulesOpts) Set(val *DeleteFirewallRulesOpts) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteFirewallRulesOpts) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteFirewallRulesOpts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteFirewallRulesOpts(val *DeleteFirewallRulesOpts) *NullableDeleteFirewallRulesOpts {
	return &NullableDeleteFirewallRulesOpts{value: val, isSet: true}
}

func (v NullableDeleteFirewallRulesOpts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteFirewallRulesOpts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


