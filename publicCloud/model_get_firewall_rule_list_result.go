/*
LeaseWeb API for launching and managing Public Cloud instances

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.  <div class=\"badge\">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publicCloud

import (
	"encoding/json"
)

// checks if the GetFirewallRuleListResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFirewallRuleListResult{}

// GetFirewallRuleListResult struct for GetFirewallRuleListResult
type GetFirewallRuleListResult struct {
	FirewallRules []FirewallRule `json:"firewallRules,omitempty"`
	Metadata *Metadata `json:"_metadata,omitempty"`
}

// NewGetFirewallRuleListResult instantiates a new GetFirewallRuleListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFirewallRuleListResult() *GetFirewallRuleListResult {
	this := GetFirewallRuleListResult{}
	return &this
}

// NewGetFirewallRuleListResultWithDefaults instantiates a new GetFirewallRuleListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFirewallRuleListResultWithDefaults() *GetFirewallRuleListResult {
	this := GetFirewallRuleListResult{}
	return &this
}

// GetFirewallRules returns the FirewallRules field value if set, zero value otherwise.
func (o *GetFirewallRuleListResult) GetFirewallRules() []FirewallRule {
	if o == nil || IsNil(o.FirewallRules) {
		var ret []FirewallRule
		return ret
	}
	return o.FirewallRules
}

// GetFirewallRulesOk returns a tuple with the FirewallRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFirewallRuleListResult) GetFirewallRulesOk() ([]FirewallRule, bool) {
	if o == nil || IsNil(o.FirewallRules) {
		return nil, false
	}
	return o.FirewallRules, true
}

// HasFirewallRules returns a boolean if a field has been set.
func (o *GetFirewallRuleListResult) HasFirewallRules() bool {
	if o != nil && !IsNil(o.FirewallRules) {
		return true
	}

	return false
}

// SetFirewallRules gets a reference to the given []FirewallRule and assigns it to the FirewallRules field.
func (o *GetFirewallRuleListResult) SetFirewallRules(v []FirewallRule) {
	o.FirewallRules = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GetFirewallRuleListResult) GetMetadata() Metadata {
	if o == nil || IsNil(o.Metadata) {
		var ret Metadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFirewallRuleListResult) GetMetadataOk() (*Metadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GetFirewallRuleListResult) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given Metadata and assigns it to the Metadata field.
func (o *GetFirewallRuleListResult) SetMetadata(v Metadata) {
	o.Metadata = &v
}

func (o GetFirewallRuleListResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFirewallRuleListResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FirewallRules) {
		toSerialize["firewallRules"] = o.FirewallRules
	}
	if !IsNil(o.Metadata) {
		toSerialize["_metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableGetFirewallRuleListResult struct {
	value *GetFirewallRuleListResult
	isSet bool
}

func (v NullableGetFirewallRuleListResult) Get() *GetFirewallRuleListResult {
	return v.value
}

func (v *NullableGetFirewallRuleListResult) Set(val *GetFirewallRuleListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFirewallRuleListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFirewallRuleListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFirewallRuleListResult(val *GetFirewallRuleListResult) *NullableGetFirewallRuleListResult {
	return &NullableGetFirewallRuleListResult{value: val, isSet: true}
}

func (v NullableGetFirewallRuleListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFirewallRuleListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


