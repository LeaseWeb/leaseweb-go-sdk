/*
LeaseWeb API for launching and managing Public Cloud instances

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.  <div class=\"badge\">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publicCloud

import (
	"encoding/json"
)

// checks if the LoadBalancerTargetOpts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadBalancerTargetOpts{}

// LoadBalancerTargetOpts struct for LoadBalancerTargetOpts
type LoadBalancerTargetOpts struct {
	Targets []LoadBalancerTargetOpt `json:"targets,omitempty"`
}

// NewLoadBalancerTargetOpts instantiates a new LoadBalancerTargetOpts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerTargetOpts() *LoadBalancerTargetOpts {
	this := LoadBalancerTargetOpts{}
	return &this
}

// NewLoadBalancerTargetOptsWithDefaults instantiates a new LoadBalancerTargetOpts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerTargetOptsWithDefaults() *LoadBalancerTargetOpts {
	this := LoadBalancerTargetOpts{}
	return &this
}

// GetTargets returns the Targets field value if set, zero value otherwise.
func (o *LoadBalancerTargetOpts) GetTargets() []LoadBalancerTargetOpt {
	if o == nil || IsNil(o.Targets) {
		var ret []LoadBalancerTargetOpt
		return ret
	}
	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerTargetOpts) GetTargetsOk() ([]LoadBalancerTargetOpt, bool) {
	if o == nil || IsNil(o.Targets) {
		return nil, false
	}
	return o.Targets, true
}

// HasTargets returns a boolean if a field has been set.
func (o *LoadBalancerTargetOpts) HasTargets() bool {
	if o != nil && !IsNil(o.Targets) {
		return true
	}

	return false
}

// SetTargets gets a reference to the given []LoadBalancerTargetOpt and assigns it to the Targets field.
func (o *LoadBalancerTargetOpts) SetTargets(v []LoadBalancerTargetOpt) {
	o.Targets = v
}

func (o LoadBalancerTargetOpts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadBalancerTargetOpts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Targets) {
		toSerialize["targets"] = o.Targets
	}
	return toSerialize, nil
}

type NullableLoadBalancerTargetOpts struct {
	value *LoadBalancerTargetOpts
	isSet bool
}

func (v NullableLoadBalancerTargetOpts) Get() *LoadBalancerTargetOpts {
	return v.value
}

func (v *NullableLoadBalancerTargetOpts) Set(val *LoadBalancerTargetOpts) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerTargetOpts) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerTargetOpts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerTargetOpts(val *LoadBalancerTargetOpts) *NullableLoadBalancerTargetOpts {
	return &NullableLoadBalancerTargetOpts{value: val, isSet: true}
}

func (v NullableLoadBalancerTargetOpts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerTargetOpts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


