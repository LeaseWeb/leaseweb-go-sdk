/*
LeaseWeb API for launching and managing Public Cloud instances

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.  <div class=\"badge\">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publicCloud

import (
	"encoding/json"
	"time"
)

// checks if the UpdateAutoScalingGroupResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAutoScalingGroupResult{}

// UpdateAutoScalingGroupResult struct for UpdateAutoScalingGroupResult
type UpdateAutoScalingGroupResult struct {
	// The Auto Scaling Group unique identifier
	Id *string `json:"id,omitempty"`
	// Auto Scaling Group type
	Type *string `json:"type,omitempty"`
	// The Auto Scaling Group's current state.
	State *string `json:"state,omitempty"`
	// Number of instances that should be running
	DesiredAmount NullableInt32 `json:"desiredAmount,omitempty"`
	// The minimum number of instances that should be running
	MinimumAmount NullableInt32 `json:"minimumAmount,omitempty"`
	// Only for \"CPU_BASED\" auto scaling group. The maximum number of instances that can be running
	MaximumAmount NullableInt32 `json:"maximumAmount,omitempty"`
	// Only for \"CPU_BASED\" auto scaling group. The target average CPU utilization for scaling
	CpuThreshold NullableInt32 `json:"cpuThreshold,omitempty"`
	// Only for \"CPU_BASED\" auto scaling group. Warm-up time in seconds for new instances
	WarmupTime NullableInt32 `json:"warmupTime,omitempty"`
	// The region in which the Auto Scaling Group was launched
	Region *string `json:"region,omitempty"`
	// The identifying name set to the auto scaling group
	Reference *string `json:"reference,omitempty"`
	// Date and time when the Auto Scaling Group was created
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Date and time when the Auto Scaling Group was last updated
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// Only for \"SCHEDULED\" auto scaling group. Date and time (UTC) that the instances need to be launched
	StartsAt NullableTime `json:"startsAt,omitempty"`
	// Only for \"SCHEDULED\" auto scaling group. Date and time (UTC) that the instances need to be terminated
	EndsAt NullableTime `json:"endsAt,omitempty"`
	LoadBalancer NullableAutoScalingGroupLoadBalancer `json:"loadBalancer,omitempty"`
}

// NewUpdateAutoScalingGroupResult instantiates a new UpdateAutoScalingGroupResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAutoScalingGroupResult() *UpdateAutoScalingGroupResult {
	this := UpdateAutoScalingGroupResult{}
	return &this
}

// NewUpdateAutoScalingGroupResultWithDefaults instantiates a new UpdateAutoScalingGroupResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAutoScalingGroupResultWithDefaults() *UpdateAutoScalingGroupResult {
	this := UpdateAutoScalingGroupResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateAutoScalingGroupResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAutoScalingGroupResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdateAutoScalingGroupResult) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateAutoScalingGroupResult) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAutoScalingGroupResult) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateAutoScalingGroupResult) SetType(v string) {
	o.Type = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *UpdateAutoScalingGroupResult) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAutoScalingGroupResult) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *UpdateAutoScalingGroupResult) SetState(v string) {
	o.State = &v
}

// GetDesiredAmount returns the DesiredAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAutoScalingGroupResult) GetDesiredAmount() int32 {
	if o == nil || IsNil(o.DesiredAmount.Get()) {
		var ret int32
		return ret
	}
	return *o.DesiredAmount.Get()
}

// GetDesiredAmountOk returns a tuple with the DesiredAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAutoScalingGroupResult) GetDesiredAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DesiredAmount.Get(), o.DesiredAmount.IsSet()
}

// HasDesiredAmount returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasDesiredAmount() bool {
	if o != nil && o.DesiredAmount.IsSet() {
		return true
	}

	return false
}

// SetDesiredAmount gets a reference to the given NullableInt32 and assigns it to the DesiredAmount field.
func (o *UpdateAutoScalingGroupResult) SetDesiredAmount(v int32) {
	o.DesiredAmount.Set(&v)
}
// SetDesiredAmountNil sets the value for DesiredAmount to be an explicit nil
func (o *UpdateAutoScalingGroupResult) SetDesiredAmountNil() {
	o.DesiredAmount.Set(nil)
}

// UnsetDesiredAmount ensures that no value is present for DesiredAmount, not even an explicit nil
func (o *UpdateAutoScalingGroupResult) UnsetDesiredAmount() {
	o.DesiredAmount.Unset()
}

// GetMinimumAmount returns the MinimumAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAutoScalingGroupResult) GetMinimumAmount() int32 {
	if o == nil || IsNil(o.MinimumAmount.Get()) {
		var ret int32
		return ret
	}
	return *o.MinimumAmount.Get()
}

// GetMinimumAmountOk returns a tuple with the MinimumAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAutoScalingGroupResult) GetMinimumAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimumAmount.Get(), o.MinimumAmount.IsSet()
}

// HasMinimumAmount returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasMinimumAmount() bool {
	if o != nil && o.MinimumAmount.IsSet() {
		return true
	}

	return false
}

// SetMinimumAmount gets a reference to the given NullableInt32 and assigns it to the MinimumAmount field.
func (o *UpdateAutoScalingGroupResult) SetMinimumAmount(v int32) {
	o.MinimumAmount.Set(&v)
}
// SetMinimumAmountNil sets the value for MinimumAmount to be an explicit nil
func (o *UpdateAutoScalingGroupResult) SetMinimumAmountNil() {
	o.MinimumAmount.Set(nil)
}

// UnsetMinimumAmount ensures that no value is present for MinimumAmount, not even an explicit nil
func (o *UpdateAutoScalingGroupResult) UnsetMinimumAmount() {
	o.MinimumAmount.Unset()
}

// GetMaximumAmount returns the MaximumAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAutoScalingGroupResult) GetMaximumAmount() int32 {
	if o == nil || IsNil(o.MaximumAmount.Get()) {
		var ret int32
		return ret
	}
	return *o.MaximumAmount.Get()
}

// GetMaximumAmountOk returns a tuple with the MaximumAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAutoScalingGroupResult) GetMaximumAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaximumAmount.Get(), o.MaximumAmount.IsSet()
}

// HasMaximumAmount returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasMaximumAmount() bool {
	if o != nil && o.MaximumAmount.IsSet() {
		return true
	}

	return false
}

// SetMaximumAmount gets a reference to the given NullableInt32 and assigns it to the MaximumAmount field.
func (o *UpdateAutoScalingGroupResult) SetMaximumAmount(v int32) {
	o.MaximumAmount.Set(&v)
}
// SetMaximumAmountNil sets the value for MaximumAmount to be an explicit nil
func (o *UpdateAutoScalingGroupResult) SetMaximumAmountNil() {
	o.MaximumAmount.Set(nil)
}

// UnsetMaximumAmount ensures that no value is present for MaximumAmount, not even an explicit nil
func (o *UpdateAutoScalingGroupResult) UnsetMaximumAmount() {
	o.MaximumAmount.Unset()
}

// GetCpuThreshold returns the CpuThreshold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAutoScalingGroupResult) GetCpuThreshold() int32 {
	if o == nil || IsNil(o.CpuThreshold.Get()) {
		var ret int32
		return ret
	}
	return *o.CpuThreshold.Get()
}

// GetCpuThresholdOk returns a tuple with the CpuThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAutoScalingGroupResult) GetCpuThresholdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CpuThreshold.Get(), o.CpuThreshold.IsSet()
}

// HasCpuThreshold returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasCpuThreshold() bool {
	if o != nil && o.CpuThreshold.IsSet() {
		return true
	}

	return false
}

// SetCpuThreshold gets a reference to the given NullableInt32 and assigns it to the CpuThreshold field.
func (o *UpdateAutoScalingGroupResult) SetCpuThreshold(v int32) {
	o.CpuThreshold.Set(&v)
}
// SetCpuThresholdNil sets the value for CpuThreshold to be an explicit nil
func (o *UpdateAutoScalingGroupResult) SetCpuThresholdNil() {
	o.CpuThreshold.Set(nil)
}

// UnsetCpuThreshold ensures that no value is present for CpuThreshold, not even an explicit nil
func (o *UpdateAutoScalingGroupResult) UnsetCpuThreshold() {
	o.CpuThreshold.Unset()
}

// GetWarmupTime returns the WarmupTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAutoScalingGroupResult) GetWarmupTime() int32 {
	if o == nil || IsNil(o.WarmupTime.Get()) {
		var ret int32
		return ret
	}
	return *o.WarmupTime.Get()
}

// GetWarmupTimeOk returns a tuple with the WarmupTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAutoScalingGroupResult) GetWarmupTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarmupTime.Get(), o.WarmupTime.IsSet()
}

// HasWarmupTime returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasWarmupTime() bool {
	if o != nil && o.WarmupTime.IsSet() {
		return true
	}

	return false
}

// SetWarmupTime gets a reference to the given NullableInt32 and assigns it to the WarmupTime field.
func (o *UpdateAutoScalingGroupResult) SetWarmupTime(v int32) {
	o.WarmupTime.Set(&v)
}
// SetWarmupTimeNil sets the value for WarmupTime to be an explicit nil
func (o *UpdateAutoScalingGroupResult) SetWarmupTimeNil() {
	o.WarmupTime.Set(nil)
}

// UnsetWarmupTime ensures that no value is present for WarmupTime, not even an explicit nil
func (o *UpdateAutoScalingGroupResult) UnsetWarmupTime() {
	o.WarmupTime.Unset()
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *UpdateAutoScalingGroupResult) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAutoScalingGroupResult) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *UpdateAutoScalingGroupResult) SetRegion(v string) {
	o.Region = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *UpdateAutoScalingGroupResult) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAutoScalingGroupResult) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *UpdateAutoScalingGroupResult) SetReference(v string) {
	o.Reference = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *UpdateAutoScalingGroupResult) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAutoScalingGroupResult) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *UpdateAutoScalingGroupResult) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *UpdateAutoScalingGroupResult) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAutoScalingGroupResult) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *UpdateAutoScalingGroupResult) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetStartsAt returns the StartsAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAutoScalingGroupResult) GetStartsAt() time.Time {
	if o == nil || IsNil(o.StartsAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartsAt.Get()
}

// GetStartsAtOk returns a tuple with the StartsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAutoScalingGroupResult) GetStartsAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartsAt.Get(), o.StartsAt.IsSet()
}

// HasStartsAt returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasStartsAt() bool {
	if o != nil && o.StartsAt.IsSet() {
		return true
	}

	return false
}

// SetStartsAt gets a reference to the given NullableTime and assigns it to the StartsAt field.
func (o *UpdateAutoScalingGroupResult) SetStartsAt(v time.Time) {
	o.StartsAt.Set(&v)
}
// SetStartsAtNil sets the value for StartsAt to be an explicit nil
func (o *UpdateAutoScalingGroupResult) SetStartsAtNil() {
	o.StartsAt.Set(nil)
}

// UnsetStartsAt ensures that no value is present for StartsAt, not even an explicit nil
func (o *UpdateAutoScalingGroupResult) UnsetStartsAt() {
	o.StartsAt.Unset()
}

// GetEndsAt returns the EndsAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAutoScalingGroupResult) GetEndsAt() time.Time {
	if o == nil || IsNil(o.EndsAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EndsAt.Get()
}

// GetEndsAtOk returns a tuple with the EndsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAutoScalingGroupResult) GetEndsAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndsAt.Get(), o.EndsAt.IsSet()
}

// HasEndsAt returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasEndsAt() bool {
	if o != nil && o.EndsAt.IsSet() {
		return true
	}

	return false
}

// SetEndsAt gets a reference to the given NullableTime and assigns it to the EndsAt field.
func (o *UpdateAutoScalingGroupResult) SetEndsAt(v time.Time) {
	o.EndsAt.Set(&v)
}
// SetEndsAtNil sets the value for EndsAt to be an explicit nil
func (o *UpdateAutoScalingGroupResult) SetEndsAtNil() {
	o.EndsAt.Set(nil)
}

// UnsetEndsAt ensures that no value is present for EndsAt, not even an explicit nil
func (o *UpdateAutoScalingGroupResult) UnsetEndsAt() {
	o.EndsAt.Unset()
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAutoScalingGroupResult) GetLoadBalancer() AutoScalingGroupLoadBalancer {
	if o == nil || IsNil(o.LoadBalancer.Get()) {
		var ret AutoScalingGroupLoadBalancer
		return ret
	}
	return *o.LoadBalancer.Get()
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAutoScalingGroupResult) GetLoadBalancerOk() (*AutoScalingGroupLoadBalancer, bool) {
	if o == nil {
		return nil, false
	}
	return o.LoadBalancer.Get(), o.LoadBalancer.IsSet()
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *UpdateAutoScalingGroupResult) HasLoadBalancer() bool {
	if o != nil && o.LoadBalancer.IsSet() {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given NullableAutoScalingGroupLoadBalancer and assigns it to the LoadBalancer field.
func (o *UpdateAutoScalingGroupResult) SetLoadBalancer(v AutoScalingGroupLoadBalancer) {
	o.LoadBalancer.Set(&v)
}
// SetLoadBalancerNil sets the value for LoadBalancer to be an explicit nil
func (o *UpdateAutoScalingGroupResult) SetLoadBalancerNil() {
	o.LoadBalancer.Set(nil)
}

// UnsetLoadBalancer ensures that no value is present for LoadBalancer, not even an explicit nil
func (o *UpdateAutoScalingGroupResult) UnsetLoadBalancer() {
	o.LoadBalancer.Unset()
}

func (o UpdateAutoScalingGroupResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAutoScalingGroupResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if o.DesiredAmount.IsSet() {
		toSerialize["desiredAmount"] = o.DesiredAmount.Get()
	}
	if o.MinimumAmount.IsSet() {
		toSerialize["minimumAmount"] = o.MinimumAmount.Get()
	}
	if o.MaximumAmount.IsSet() {
		toSerialize["maximumAmount"] = o.MaximumAmount.Get()
	}
	if o.CpuThreshold.IsSet() {
		toSerialize["cpuThreshold"] = o.CpuThreshold.Get()
	}
	if o.WarmupTime.IsSet() {
		toSerialize["warmupTime"] = o.WarmupTime.Get()
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.StartsAt.IsSet() {
		toSerialize["startsAt"] = o.StartsAt.Get()
	}
	if o.EndsAt.IsSet() {
		toSerialize["endsAt"] = o.EndsAt.Get()
	}
	if o.LoadBalancer.IsSet() {
		toSerialize["loadBalancer"] = o.LoadBalancer.Get()
	}
	return toSerialize, nil
}

type NullableUpdateAutoScalingGroupResult struct {
	value *UpdateAutoScalingGroupResult
	isSet bool
}

func (v NullableUpdateAutoScalingGroupResult) Get() *UpdateAutoScalingGroupResult {
	return v.value
}

func (v *NullableUpdateAutoScalingGroupResult) Set(val *UpdateAutoScalingGroupResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAutoScalingGroupResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAutoScalingGroupResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAutoScalingGroupResult(val *UpdateAutoScalingGroupResult) *NullableUpdateAutoScalingGroupResult {
	return &NullableUpdateAutoScalingGroupResult{value: val, isSet: true}
}

func (v NullableUpdateAutoScalingGroupResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAutoScalingGroupResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


