/*
LeaseWeb API for launching and managing Public Cloud instances

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.  <div class=\"badge\">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publicCloud

import (
	"encoding/json"
)

// checks if the OperatingSystemDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OperatingSystemDetail{}

// OperatingSystemDetail struct for OperatingSystemDetail
type OperatingSystemDetail struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Version *string `json:"version,omitempty"`
	Family *string `json:"family,omitempty"`
	Flavour *string `json:"flavour,omitempty"`
	Architecture *string `json:"architecture,omitempty"`
	// The marketplace app IDs used to reference to on other operations
	MarketApps []string `json:"marketApps,omitempty"`
	// The storage types supported by the operating systems
	StorageTypes []string `json:"storageTypes,omitempty"`
}

// NewOperatingSystemDetail instantiates a new OperatingSystemDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperatingSystemDetail() *OperatingSystemDetail {
	this := OperatingSystemDetail{}
	return &this
}

// NewOperatingSystemDetailWithDefaults instantiates a new OperatingSystemDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperatingSystemDetailWithDefaults() *OperatingSystemDetail {
	this := OperatingSystemDetail{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OperatingSystemDetail) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatingSystemDetail) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OperatingSystemDetail) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OperatingSystemDetail) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OperatingSystemDetail) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatingSystemDetail) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OperatingSystemDetail) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OperatingSystemDetail) SetName(v string) {
	o.Name = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *OperatingSystemDetail) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatingSystemDetail) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *OperatingSystemDetail) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *OperatingSystemDetail) SetVersion(v string) {
	o.Version = &v
}

// GetFamily returns the Family field value if set, zero value otherwise.
func (o *OperatingSystemDetail) GetFamily() string {
	if o == nil || IsNil(o.Family) {
		var ret string
		return ret
	}
	return *o.Family
}

// GetFamilyOk returns a tuple with the Family field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatingSystemDetail) GetFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.Family) {
		return nil, false
	}
	return o.Family, true
}

// HasFamily returns a boolean if a field has been set.
func (o *OperatingSystemDetail) HasFamily() bool {
	if o != nil && !IsNil(o.Family) {
		return true
	}

	return false
}

// SetFamily gets a reference to the given string and assigns it to the Family field.
func (o *OperatingSystemDetail) SetFamily(v string) {
	o.Family = &v
}

// GetFlavour returns the Flavour field value if set, zero value otherwise.
func (o *OperatingSystemDetail) GetFlavour() string {
	if o == nil || IsNil(o.Flavour) {
		var ret string
		return ret
	}
	return *o.Flavour
}

// GetFlavourOk returns a tuple with the Flavour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatingSystemDetail) GetFlavourOk() (*string, bool) {
	if o == nil || IsNil(o.Flavour) {
		return nil, false
	}
	return o.Flavour, true
}

// HasFlavour returns a boolean if a field has been set.
func (o *OperatingSystemDetail) HasFlavour() bool {
	if o != nil && !IsNil(o.Flavour) {
		return true
	}

	return false
}

// SetFlavour gets a reference to the given string and assigns it to the Flavour field.
func (o *OperatingSystemDetail) SetFlavour(v string) {
	o.Flavour = &v
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *OperatingSystemDetail) GetArchitecture() string {
	if o == nil || IsNil(o.Architecture) {
		var ret string
		return ret
	}
	return *o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatingSystemDetail) GetArchitectureOk() (*string, bool) {
	if o == nil || IsNil(o.Architecture) {
		return nil, false
	}
	return o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *OperatingSystemDetail) HasArchitecture() bool {
	if o != nil && !IsNil(o.Architecture) {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *OperatingSystemDetail) SetArchitecture(v string) {
	o.Architecture = &v
}

// GetMarketApps returns the MarketApps field value if set, zero value otherwise.
func (o *OperatingSystemDetail) GetMarketApps() []string {
	if o == nil || IsNil(o.MarketApps) {
		var ret []string
		return ret
	}
	return o.MarketApps
}

// GetMarketAppsOk returns a tuple with the MarketApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatingSystemDetail) GetMarketAppsOk() ([]string, bool) {
	if o == nil || IsNil(o.MarketApps) {
		return nil, false
	}
	return o.MarketApps, true
}

// HasMarketApps returns a boolean if a field has been set.
func (o *OperatingSystemDetail) HasMarketApps() bool {
	if o != nil && !IsNil(o.MarketApps) {
		return true
	}

	return false
}

// SetMarketApps gets a reference to the given []string and assigns it to the MarketApps field.
func (o *OperatingSystemDetail) SetMarketApps(v []string) {
	o.MarketApps = v
}

// GetStorageTypes returns the StorageTypes field value if set, zero value otherwise.
func (o *OperatingSystemDetail) GetStorageTypes() []string {
	if o == nil || IsNil(o.StorageTypes) {
		var ret []string
		return ret
	}
	return o.StorageTypes
}

// GetStorageTypesOk returns a tuple with the StorageTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatingSystemDetail) GetStorageTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.StorageTypes) {
		return nil, false
	}
	return o.StorageTypes, true
}

// HasStorageTypes returns a boolean if a field has been set.
func (o *OperatingSystemDetail) HasStorageTypes() bool {
	if o != nil && !IsNil(o.StorageTypes) {
		return true
	}

	return false
}

// SetStorageTypes gets a reference to the given []string and assigns it to the StorageTypes field.
func (o *OperatingSystemDetail) SetStorageTypes(v []string) {
	o.StorageTypes = v
}

func (o OperatingSystemDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OperatingSystemDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Family) {
		toSerialize["family"] = o.Family
	}
	if !IsNil(o.Flavour) {
		toSerialize["flavour"] = o.Flavour
	}
	if !IsNil(o.Architecture) {
		toSerialize["architecture"] = o.Architecture
	}
	if !IsNil(o.MarketApps) {
		toSerialize["marketApps"] = o.MarketApps
	}
	if !IsNil(o.StorageTypes) {
		toSerialize["storageTypes"] = o.StorageTypes
	}
	return toSerialize, nil
}

type NullableOperatingSystemDetail struct {
	value *OperatingSystemDetail
	isSet bool
}

func (v NullableOperatingSystemDetail) Get() *OperatingSystemDetail {
	return v.value
}

func (v *NullableOperatingSystemDetail) Set(val *OperatingSystemDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableOperatingSystemDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableOperatingSystemDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperatingSystemDetail(val *OperatingSystemDetail) *NullableOperatingSystemDetail {
	return &NullableOperatingSystemDetail{value: val, isSet: true}
}

func (v NullableOperatingSystemDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperatingSystemDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


