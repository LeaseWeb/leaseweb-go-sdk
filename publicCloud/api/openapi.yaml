openapi: 3.0.0
info:
  description: |-
    > The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/**

    This API provides ways to launch and manage Public Cloud instances.

    <div class="badge">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: LeaseWeb API for launching and managing Public Cloud instances
  version: v1
  x-logo:
    url: /images/logo.png
    altText: Leaseweb developer documentation
    backgroundColor: '#5484c6'
    href: https://developer.leaseweb.com
servers:
- url: https://api.leaseweb.com/publicCloud/v1
security:
- OAuth2: []
- BearerAuth: []
- ApiKeyAuth: []
tags:
- description: |
    The API uses standard HTTP status codes to indicate the success or failure of the API call. The response will be JSON. Most APIs use the following format:

    ```
    {
    "errorCode" : "APP00800",
    "errorMessage" : "The connection with the DB cannot be established.",
    "correlationId" : "550e8400-e29b-41d4-a716-446655440000",
    "userMessage" : "Cannot handle your request at the moment. Please try again later.",
    "reference" : "https://developer.leaseweb.com/errors/APP00800"
    }
    ```
  name: Errors
  x-traitTag: true
- description: |-
    Authentication for the APIs is required. To authenticate your call, you will need to sent your API key as `X-LSW-Auth` header.

    You can generate API keys in the [Customer Portal](https://secure.leaseweb.com/api-client-management/).
  name: Authentication
  x-traitTag: true
paths:
  /regions:
    get:
      operationId: regions/list
      parameters:
      - description: Limit the number of results returned.
        example: 20
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Return results starting from the given offset.
        example: 10
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                regions:
                - name: eu-west-3
                  location: Amsterdam
                - name: eu-central-1
                  location: Frankfurt
                - name: eu-west-2
                  location: London
                - name: ap-southeast-1
                  location: Singapore
                - name: ca-central-1
                  location: Montreal
                - name: us-east-1
                  location: Washington
                - name: us-west-1
                  location: San Francisco
                _metadata:
                  totalCount: 7
                  limit: 20
                  offset: 0
              schema:
                $ref: '#/components/schemas/getRegionListResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: List regions
      tags:
      - publicCloud
  /instanceTypes:
    get:
      description: Get instance types
      operationId: getInstanceTypeList
      parameters:
      - explode: true
        in: query
        name: region
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                instanceTypes:
                - name: lsw.c3.xlarge
                  resources:
                    cpu:
                      value: 4
                      unit: vCPU
                    memory:
                      value: 7
                      unit: GiB
                    publicNetworkSpeed:
                      value: 1
                      unit: Gbps
                    privateNetworkSpeed:
                      value: 100
                      unit: Mbps
                  prices:
                    currency: EUR
                    currencySymbol: â‚¬
                    compute:
                      hourlyPrice: "0.0798"
                      monthlyPrice: "52.5"
                    storage:
                      local:
                        hourlyPrice: "0.0001"
                        monthlyPrice: "0.03"
                      central:
                        hourlyPrice: "0.0001"
                        monthlyPrice: "0.08"
                  storageTypes:
                  - CENTRAL
                  - LOCAL
                _metadata:
                  totalCount: 74
                  limit: 1
                  offset: 1
              schema:
                $ref: '#/components/schemas/getInstanceTypeListResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: List instance types
      tags:
      - publicCloud
  /instances:
    get:
      description: List and filter instances
      operationId: instance/list
      parameters:
      - description: Limit the number of results returned.
        example: 20
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Return results starting from the given offset.
        example: 10
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - example: 10.0.0.1
        explode: true
        in: query
        name: ip
        required: false
        schema:
          format: ip
          type: string
        style: form
      - example: my-webserver
        explode: true
        in: query
        name: reference
        required: false
        schema:
          type: string
        style: form
      - example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
        explode: true
        in: query
        name: id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Using this parameter, you can filter by id, reference or IP."
        example: my-webserver
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - example: HOURLY
        explode: true
        in: query
        name: contractType
        required: false
        schema:
          enum:
          - HOURLY
          - MONTHLY
          type: string
        style: form
      - example: RUNNING
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - RUNNING
          - STARTING
          - STOPPED
          - STOPPING
          - CREATING
          - DESTROYED
          - DESTROYING
          type: string
        style: form
      - description: Available regions can be found using the List Regions endpoint.
        example: eu-west-3
        explode: true
        in: query
        name: region
        required: false
        schema:
          type: string
        style: form
      - description: Available instance types can be found using the List Instance
          Types endpoint.
        example: lsw.c3.xlarge
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                instances:
                - customerId: "11111111"
                  id: 5fd135a9-3ff6-4794-8b92-8cd8747a3ea3
                  type: lsw.c3.4xlarge
                  resources:
                    cpu:
                      value: 16
                      unit: vCPU
                    memory:
                      value: 30
                      unit: GiB
                    publicNetworkSpeed:
                      value: 1
                      unit: Gbps
                    privateNetworkSpeed:
                      value: 100
                      unit: Mbps
                  region: eu-west-3
                  reference: my-webserver
                  operatingSystem:
                    id: UBUNTU_22_04_64BIT
                    name: Ubuntu 22.04 LTS (x86_64)
                    version: "22.04"
                    family: linux
                    flavour: ubuntu
                    architecture: x86_64
                  state: RUNNING
                  hasPublicIpV4: true
                  hasPrivateNetwork: false
                  rootDiskSize: 10
                  ips:
                  - ip: 85.99.99.99
                    prefixLength: "28"
                    version: 4
                    nullRouted: false
                    reverseLookup: null
                    mainIp: false
                    ddos:
                      detectionProfile: STANDARD_DEFAULT
                      protectionType: STANDARD
                  billingFrequency: 3
                  contractTerm: 3
                  contractType: MONTHLY
                  contractEndsAt: 2024-02-01T00:00:00+00:00
                  startedAt: 2023-10-26T08:17:33+00:00
                  contractRenewalsAt: 2024-02-01T00:00:00+00:00
                  contractCreatedAt: 2023-10-26T08:17:19+00:00
                _metadata:
                  totalCount: 1
                  limit: 20
                  offset: 0
              schema:
                $ref: '#/components/schemas/getInstanceListResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Get instance list
      tags:
      - publicCloud
    post:
      description: "Launch a Public Cloud instance. \n\nAvailable regions can be obtained\
        \ using `/v1/regions`.\n\nAvailable Operating Systems can be obtained using\
        \ `/v1/operatingSystems`.\n\nAvailable instance types for your region can\
        \ be obtained using `/v1/instanceTypes`."
      operationId: launchInstance
      requestBody:
        content:
          application/json:
            example:
              type: lsw.m3.large
              region: eu-west-3
              operatingSystemId: UBUNTU_20_04_64BIT
              reference: my-webserver
              contractTerm: 0
              billingFrequency: 1
              contractType: HOURLY
              rootDiskSize: 50
              rootDiskStorageType: CENTRAL
            schema:
              $ref: '#/components/schemas/launchInstanceOpts'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                customerId: "111111111"
                id: 15ca75e3-5b36-44af-98fe-e96cf402d17e
                type: lsw.m3.large
                resources:
                  cpu:
                    value: 1
                    unit: vCPU
                  memory:
                    value: 3
                    unit: GiB
                  publicNetworkSpeed:
                    value: 1
                    unit: Gbps
                  privateNetworkSpeed:
                    value: 100
                    unit: Mbps
                region: eu-west-3
                reference: web server
                operatingSystem:
                  id: UBUNTU_20_04_64BIT
                  name: Ubuntu 20.04 LTS (x86_64)
                  version: "20.04"
                  family: linux
                  flavour: ubuntu
                  architecture: x86_64
                state: CREATING
                publicIpV4: true
                privateNetwork: false
                startedAt: null
                rootDiskSize: 5
                rootDiskStorageType: CENTRAL
                ips: []
                billingFrequency: 1
                contractTerm: 0
                contractType: HOURLY
                contractEndsAt: null
                contractRenewalsAt: 2023-10-30T16:39:09+00:00
                contractCreatedAt: 2023-10-30T16:39:09+00:00
                iso: null
                marketAppId: null
              schema:
                $ref: '#/components/schemas/launchInstanceCreatedResult'
          description: OK
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Launch instance
      tags:
      - publicCloud
  /instances/{instanceId}:
    delete:
      description: Terminate Public Cloud instance
      operationId: terminateInstance
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: "If instance is hourly, it is scheduled for termination immediately,\
            \ otherwise, will be marked for termination at the date specified by the\
            \ instance's field `contractEndAt`"
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Terminate instance
      tags:
      - publicCloud
    get:
      description: Get details about the instance
      operationId: getInstance
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                customerId: "11111111"
                id: 5fd135a9-3ff6-4794-8b92-8cd8747a3ea3
                type: lsw.c3.4xlarge
                resources:
                  cpu:
                    value: 16
                    unit: vCPU
                  memory:
                    value: 30
                    unit: GiB
                  publicNetworkSpeed:
                    value: 1
                    unit: Gbps
                  privateNetworkSpeed:
                    value: 100
                    unit: Mbps
                region: eu-west-3
                reference: my-webserver
                operatingSystem:
                  id: UBUNTU_22_04_64BIT
                  name: Ubuntu 22.04 LTS (x86_64)
                  version: "22.04"
                  family: linux
                  flavour: ubuntu
                  architecture: x86_64
                state: RUNNING
                hasPublicIpV4: true
                hasPrivateNetwork: false
                rootDiskSize: 10
                ips:
                - ip: 85.99.99.99
                  prefixLength: "28"
                  version: 4
                  nullRouted: false
                  reverseLookup: null
                  mainIp: false
                  ddos:
                    detectionProfile: STANDARD_DEFAULT
                    protectionType: STANDARD
                billingFrequency: 3
                contractTerm: 3
                contractType: MONTHLY
                contractEndsAt: 2024-02-01T00:00:00+00:00
                startedAt: 2023-10-26T08:17:33+00:00
                contractRenewalsAt: 2024-02-01T00:00:00+00:00
                contractCreatedAt: 2023-10-26T08:17:19+00:00
                iso: null
                privateNetwork:
                  privateNetworkId: "1234"
                  status: CONFIGURED
                  subnet: 10.0.0.0/27
              schema:
                $ref: '#/components/schemas/getInstanceResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Get instance details
      tags:
      - publicCloud
    put:
      description: |-
        Update the instance's reference, type, storage or contract type.

        Eligible instance types for update can be obtained using `/v1/instances/{instanceId}/instanceTypesUpdate`.
      operationId: updateInstance
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              reference:
                summary: Update only reference
                value:
                  reference: new-reference
              type:
                summary: Update only type
                value:
                  type: lsw.m4.xlarge
              type-and-root-disk-size:
                summary: Update type and root disk size from 10 to 20 GB
                value:
                  type: lsw.m4.xlarge
                  rootDiskSize: 20
              type-and-contract-type:
                summary: Update contract type from HOURLY to MONTHLY
                value:
                  contractType: MONTHLY
                  contractTerm: 1
                  billingFrequency: 3
            schema:
              $ref: '#/components/schemas/updateInstanceOpts'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                customerId: "111111111"
                salesOrgId: "2000"
                id: 15ca75e3-5b36-44af-98fe-e96cf402d17e
                type: lsw.m3.large
                resources:
                  cpu:
                    value: 1
                    unit: vCPU
                  memory:
                    value: 3
                    unit: GiB
                  publicNetworkSpeed:
                    value: 1
                    unit: Gbps
                  privateNetworkSpeed:
                    value: 100
                    unit: Mbps
                region: eu-west-3
                reference: web server
                operatingSystem:
                  id: UBUNTU_20_04_64BIT
                  name: Ubuntu 20.04 LTS (x86_64)
                  version: "20.04"
                  family: linux
                  flavour: ubuntu
                  architecture: x86_64
                state: RUNNING
                publicIpV4: true
                privateNetwork: false
                startedAt: null
                rootDiskSize: 5
                ips:
                - ip: 85.99.99.99
                  prefixLength: "28"
                  version: 4
                  nullRouted: false
                  reverseLookup: null
                  mainIp: false
                  ddos:
                    detectionProfile: STANDARD_DEFAULT
                    protectionType: STANDARD
                billingFrequency: 1
                contractTerm: 0
                contractType: HOURLY
                contractEndsAt: null
                contractRenewalsAt: 2023-10-30T16:39:09+00:00
                contractCreatedAt: 2023-10-30T16:39:09+00:00
                iso: null
              schema:
                $ref: '#/components/schemas/updateInstanceResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Update instance
      tags:
      - publicCloud
  /instances/{instanceId}/cancelTermination:
    post:
      description: Cancel the termination process of monthly instances. Must be executed
        prior to the instance's `contractEndsAt`.
      operationId: cancelInstanceTermination
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No content. Cancellation has been cancelled and contract is
            reinstated.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Cancel instance termination
      tags:
      - publicCloud
  /instances/{instanceId}/start:
    post:
      description: The instance must be stopped before the execution
      operationId: startInstance
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "202":
          description: Request has been accepted and instance is going to be started
            soon
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Start instance
      tags:
      - publicCloud
  /instances/{instanceId}/stop:
    post:
      description: The instance must be running before the execution
      operationId: stopInstance
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "202":
          description: Request has been accepted and instance is going to be stopped
            soon
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Stop instance
      tags:
      - publicCloud
  /instances/{instanceId}/reboot:
    post:
      description: The instance must be running before the execution
      operationId: rebootInstance
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "202":
          description: Request has been accepted and instance is going to be rebooted
            soon
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Reboot instance
      tags:
      - publicCloud
  /instances/{instanceId}/console:
    get:
      description: Get console access to the instance
      operationId: getConsoleAccessToInstance
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                url: http://public-cloud.leaseweb.com/resource/noVNC/vnc.html?autoconnect=true&port=8080&token=dvoPyDxbBl8LC9OsXI55CmAUmUA50lY19b0/v/7jrA6VkrdflVWw8S2XuxDZrBaaSo4XdBAYmpfqC0kUr2aOVHjMlGFb6movdnKNxvMOEmC0spwU9XbdZJrWXzGicCLT4X4GMxgN13nn1oDQb8k9ag2rMMxENyiPZ3bbV1iGuL4cWLEMad8hHFXjJ7P2MvbnpiasXK5wKuHadrR76778ZM22xxzvjarg9S6bAWziH1u3VdKIQyJMIrDmAdjYRqL1IHqrN+uLrY6WPzv+s51lnNYd0zeQtB7YWBZup8VDcZSt5C0GrYnZx3Vh4fXWOOsFlWZgdEGKf9oM9y9RX2G/jLlVeVv4LmVCN02GRr7SAfyx8WcuWGXS7WsxpXTzdxWEm9EMZDrPQhFiZKo20PXRdgT6KbdnqCI/j8z5iPAKGO3YI5BcK5sUdhHgFUMNgJUw/qhz71/xivIP8UKrWVgZMRWXmt6hNWIeHLqrdZ0n5m9It4Os8UaKgeBvwlFTpzNTUWxvoI0+2sa8GAmW3RCe9mfK3xvW/iy1MZ651cALLVmoj6imZl7K7P33iQ==
              schema:
                $ref: '#/components/schemas/getConsoleAccessToInstanceResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Get console access
      tags:
      - publicCloud
  /instances/{instanceId}/instanceTypesUpdate:
    get:
      description: Get available instance types for update
      operationId: getUpdateInstanceTypeList
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                instanceTypes:
                - name: lsw.m3.xlarge
                  resources:
                    cpu:
                      value: 4
                      unit: vCPU
                    memory:
                      value: 15
                      unit: GiB
                    publicNetworkSpeed:
                      value: 1
                      unit: Gbps
                    privateNetworkSpeed:
                      value: 100
                      unit: Mbps
                  prices:
                    eu-west-2:
                      currency: GBP
                      currencySymbol: Â£
                      compute:
                        hourlyPrice: "0.0783"
                        monthlyPrice: "51.5000"
                      storage:
                        local:
                          hourlyPrice: "0.00004"
                          monthlyPrice: "0.02604"
                        central:
                          hourlyPrice: "0.00010"
                          monthlyPrice: "0.06944"
                    ca-central-1:
                      currency: CAD
                      currencySymbol: CA$
                      compute:
                        hourlyPrice: "0.1347"
                        monthlyPrice: "88.5800"
                      storage:
                        local:
                          hourlyPrice: "0.00006"
                          monthlyPrice: "0.04479"
                        central:
                          hourlyPrice: "0.00016"
                          monthlyPrice: "0.11944"
                    eu-west-3:
                      currency: EUR
                      currencySymbol: â‚¬
                      compute:
                        hourlyPrice: "0.0902"
                        monthlyPrice: "59.3300"
                      storage:
                        local:
                          hourlyPrice: "0.00004"
                          monthlyPrice: "0.03000"
                        central:
                          hourlyPrice: "0.00011"
                          monthlyPrice: "0.08000"
                    eu-central-1:
                      currency: EUR
                      currencySymbol: â‚¬
                      compute:
                        hourlyPrice: "0.0902"
                        monthlyPrice: "59.3300"
                      storage:
                        local:
                          hourlyPrice: "0.00004"
                          monthlyPrice: "0.03000"
                        central:
                          hourlyPrice: "0.00011"
                          monthlyPrice: "0.08000"
                    us-east-1:
                      currency: USD
                      currencySymbol: $
                      compute:
                        hourlyPrice: "0.0986"
                        monthlyPrice: "64.7900"
                      storage:
                        local:
                          hourlyPrice: "0.00004"
                          monthlyPrice: "0.03276"
                        central:
                          hourlyPrice: "0.00012"
                          monthlyPrice: "0.08736"
                    us-west-1:
                      currency: USD
                      currencySymbol: $
                      compute:
                        hourlyPrice: "0.0986"
                        monthlyPrice: "64.7900"
                      storage:
                        local:
                          hourlyPrice: "0.00004"
                          monthlyPrice: "0.03276"
                        central:
                          hourlyPrice: "0.00012"
                          monthlyPrice: "0.08736"
                    ap-southeast-1:
                      currency: SGD
                      currencySymbol: S$
                      compute:
                        hourlyPrice: "0.1318"
                        monthlyPrice: "86.6300"
                      storage:
                        local:
                          hourlyPrice: "0.00006"
                          monthlyPrice: "0.04380"
                        central:
                          hourlyPrice: "0.00016"
                          monthlyPrice: "0.11680"
                  storageTypes: null
                - name: lsw.m3.2xlarge
                  resources:
                    cpu:
                      value: 8
                      unit: vCPU
                    memory:
                      value: 30
                      unit: GiB
                    publicNetworkSpeed:
                      value: 1
                      unit: Gbps
                    privateNetworkSpeed:
                      value: 100
                      unit: Mbps
                  prices:
                    eu-west-2:
                      currency: GBP
                      currencySymbol: Â£
                      compute:
                        hourlyPrice: "0.1562"
                        monthlyPrice: "102.6500"
                      storage:
                        local:
                          hourlyPrice: "0.00004"
                          monthlyPrice: "0.02604"
                        central:
                          hourlyPrice: "0.00010"
                          monthlyPrice: "0.06944"
                    ca-central-1:
                      currency: CAD
                      currencySymbol: CA$
                      compute:
                        hourlyPrice: "0.2687"
                        monthlyPrice: "176.5700"
                      storage:
                        local:
                          hourlyPrice: "0.00006"
                          monthlyPrice: "0.04479"
                        central:
                          hourlyPrice: "0.00016"
                          monthlyPrice: "0.11944"
                    eu-west-3:
                      currency: EUR
                      currencySymbol: â‚¬
                      compute:
                        hourlyPrice: "0.1799"
                        monthlyPrice: "118.2700"
                      storage:
                        local:
                          hourlyPrice: "0.00004"
                          monthlyPrice: "0.03000"
                        central:
                          hourlyPrice: "0.00011"
                          monthlyPrice: "0.08000"
                    eu-central-1:
                      currency: EUR
                      currencySymbol: â‚¬
                      compute:
                        hourlyPrice: "0.1799"
                        monthlyPrice: "118.2700"
                      storage:
                        local:
                          hourlyPrice: "0.00004"
                          monthlyPrice: "0.03000"
                        central:
                          hourlyPrice: "0.00011"
                          monthlyPrice: "0.08000"
                    us-east-1:
                      currency: USD
                      currencySymbol: $
                      compute:
                        hourlyPrice: "0.1965"
                        monthlyPrice: "129.1500"
                      storage:
                        local:
                          hourlyPrice: "0.00004"
                          monthlyPrice: "0.03276"
                        central:
                          hourlyPrice: "0.00012"
                          monthlyPrice: "0.08736"
                    us-west-1:
                      currency: USD
                      currencySymbol: $
                      compute:
                        hourlyPrice: "0.1965"
                        monthlyPrice: "129.1500"
                      storage:
                        local:
                          hourlyPrice: "0.00004"
                          monthlyPrice: "0.03276"
                        central:
                          hourlyPrice: "0.00012"
                          monthlyPrice: "0.08736"
                    ap-southeast-1:
                      currency: SGD
                      currencySymbol: S$
                      compute:
                        hourlyPrice: "0.2627"
                        monthlyPrice: "172.6700"
                      storage:
                        local:
                          hourlyPrice: "0.00006"
                          monthlyPrice: "0.04380"
                        central:
                          hourlyPrice: "0.00016"
                          monthlyPrice: "0.11680"
                  storageTypes: null
                _metadata:
                  totalCount: 2
                  limit: 50
                  offset: 0
              schema:
                $ref: '#/components/schemas/getUpdateInstanceTypeListResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: List available instance types for update
      tags:
      - publicCloud
  /instances/{instanceId}/credentials:
    delete:
      description: Delete all credentials stored for a given instance
      operationId: credentials/delete
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Delete all instance credentials
      tags:
      - publicCloud
    get:
      description: Get all credentials stored for the instance
      operationId: getCredentialList
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                credentials:
                - type: OPERATING_SYSTEM
                  username: root
                _metadata:
                  totalCount: 1
                  limit: 20
                  offset: 0
              schema:
                $ref: '#/components/schemas/getCredentialListResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: List credentials stored for instance
      tags:
      - publicCloud
    post:
      description: Store credential used for the instance
      operationId: storeCredential
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              type: OPERATING_SYSTEM
              username: another-user
              password: a$Ndes-3fad2-rfas@-
            schema:
              $ref: '#/components/schemas/storeCredentialOpts'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                type: OPERATING_SYSTEM
                username: another-user
                password: a$Ndes-3fad2-rfas@-
              schema:
                $ref: '#/components/schemas/storeCredentialResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Store credentials
      tags:
      - publicCloud
  /instances/{instanceId}/credentials/{type}:
    get:
      description: Get credentials stored for the instance by their types
      operationId: getCredentialListByType
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - example: OPERATING_SYSTEM
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                credentials:
                - type: OPERATING_SYSTEM
                  username: root
                _metadata:
                  totalCount: 1
                  limit: 20
                  offset: 0
              schema:
                $ref: '#/components/schemas/getCredentialListByTypeResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Get credentials by type
      tags:
      - publicCloud
  /instances/{instanceId}/credentials/{type}/{username}:
    delete:
      description: Delete credential for a given type and username
      operationId: deleteCredential
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Credential type
        example: OPERATING_SYSTEM
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        example: root
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Delete credentials
      tags:
      - publicCloud
    get:
      description: Get credentials by type and username
      operationId: getCredential
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Credential type
        example: OPERATING_SYSTEM
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        example: root
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                type: OPERATING_SYSTEM
                username: root
                password: "12341234"
              schema:
                $ref: '#/components/schemas/getCredentialResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Get credentials by type and username
      tags:
      - publicCloud
    put:
      description: Update credentials for a given type and username
      operationId: updateCredential
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Credential type
        example: OPERATING_SYSTEM
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        example: root
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              password: '@-n3w-Pa$$w0rD'
            schema:
              $ref: '#/components/schemas/updateCredentialOpts'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                type: OPERATING_SYSTEM
                username: another-user
                password: '@-n3w-Pa$$w0rD'
              schema:
                $ref: '#/components/schemas/updateCredentialResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Update credentials
      tags:
      - publicCloud
  /instances/{instanceId}/resetPassword:
    post:
      description: |-
        The operation may take a few moments to complete.

        You can obtain the new credential using the credentials endpoints
      operationId: resetPassword
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "202":
          description: "Accepted. Reinstall process has started, it may take a few\
            \ moments to complete."
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Reset instance password
      tags:
      - publicCloud
  /equipments/{equipmentId}/expenses:
    get:
      operationId: getExpenses
      parameters:
      - description: Equipment's UUID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: equipmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Start date of the period to get costs for. It must be the first
          day of the month
        example: 2023-11-01
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: "End date of the period to get costs for. This date needs to\
          \ be exactly one month after the 'from' date. If this value is not passed,\
          \ it will be calculated based on 'from' parameter"
        example: 2023-12-01
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                billing:
                  instances:
                  - id: b778824a-a96e-4f6f-9713-7b7196f09c4f
                    reference: test-instance
                    resources:
                      cpu:
                        value: 2
                        unit: vCPU
                      memory:
                        value: 8
                        unit: GB
                      publicNetworkSpeed:
                        value: 5
                        unit: Gbps
                      privateNetworkSpeed:
                        value: 1000
                        unit: Mbps
                    contractType: HOURLY
                    contractCreatedAt: 2023-11-30T16:31:28+00:00
                    startedAt: 2023-11-30T16:31:46+00:00
                    contractTerm: 0
                    billingFrequency: 1
                    rootDiskSize: 15
                    billingType: POSTPAID
                    hours: 14
                    from: 2023-12-01T00:00:00+00:00
                    to: 2023-12-01T13:18:41+00:00
                    rootDiskType: CENTRAL
                    price: "0.72"
                  traffic:
                    unit: GB
                    values:
                      tier_0:
                        usage: 1000
                        price: 0
                      tier_1:
                        usage: 10000
                        price: 15.54
                      tier_2:
                        usage: 10000
                        price: 13.45
                      tier_3:
                        usage: 34.5
                        price: 2.34
              schema:
                $ref: '#/components/schemas/getExpensesResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Get costs for a given month.
      tags:
      - publicCloud
  /instances/{instanceId}/firewall:
    get:
      description: List firewall rules
      operationId: getFirewallRuleList
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Limit the number of results returned.
        example: 20
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Return results starting from the given offset.
        example: 10
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                firewallRules:
                - id: 7e59b33d-05f3-4078-b251-c7831ae8fe14
                  name: null
                  protocol: ALL
                  cidr: 0.0.0.0/0
                  startPort: 80
                  endPort: 80
                  icmpCode: null
                  icmpType: null
                - id: 2538aac0-bae3-4994-9359-7aa5a16f9773
                  name: test
                  protocol: TCP
                  cidr: 10.0.0.101/32
                  startPort: 22
                  endPort: 22
                  icmpCode: null
                  icmpType: null
                _metadata:
                  totalCount: 2
                  limit: 20
                  offset: 0
              schema:
                $ref: '#/components/schemas/getFirewallRuleListResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: List firewall rules
      tags:
      - publicCloud
  /instances/{instanceId}/firewall/batchCreate:
    post:
      description: Add multiple rules at once
      operationId: createFirewallRules
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              rules:
              - name: HTTP
                protocol: TCP
                startPort: 80
                endPort: 80
                cidr: 10.0.0.0/0
              - name: SSH
                protocol: TCP
                startPort: 22
                endPort: 22
                cidr: 10.0.0.21/32
            schema:
              $ref: '#/components/schemas/createFirewallRulesOpts'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                created:
                - id: 63ef9da0-fc26-4220-9847-519be34e5dcd
                  protocol: TCP
                  cidr: 0.0.0.0/0
                  startPort: 80
                  endPort: 80
                  icmpCode: null
                  icmpType: null
                  name: null
                - id: a1d9c596-0e71-4d95-8542-a0c3d6f7911b
                  protocol: TCP
                  cidr: 10.0.0.10/32
                  startPort: 22
                  endPort: 22
                  icmpCode: null
                  icmpType: null
                  name: null
                failed: []
              schema:
                $ref: '#/components/schemas/createFirewallRulesCreatedResult'
          description: Created.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Add firewall rules in batch
      tags:
      - publicCloud
  /instances/{instanceId}/firewall/batchUpdate:
    post:
      description: Edit multiple rules at once
      operationId: editFirewallRules
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              rules:
              - id: 64472dfd-d426-45e1-8289-5e1973bb0c04
                name: HTTP
                protocol: TCP
                startPort: 80
                endPort: 80
                cidr: 10.0.0.0/0
              - id: d85adbc-ac34-406d-9086-88ec4fa6418a
                name: SSH
                protocol: TCP
                startPort: 22
                endPort: 22
                cidr: 10.0.0.21/32
            schema:
              $ref: '#/components/schemas/editFirewallRulesOpts'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                updated:
                - id: 63ef9da0-fc26-4220-9847-519be34e5dcd
                  protocol: TCP
                  cidr: 0.0.0.0/0
                  startPort: 80
                  endPort: 80
                  icmpCode: null
                  icmpType: null
                  name: null
                - id: a1d9c596-0e71-4d95-8542-a0c3d6f7911b
                  protocol: TCP
                  cidr: 10.0.0.10/32
                  startPort: 22
                  endPort: 22
                  icmpCode: null
                  icmpType: null
                  name: null
                failed: []
              schema:
                $ref: '#/components/schemas/editFirewallRulesResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Edit firewall rules in batch
      tags:
      - publicCloud
  /instances/{instanceId}/firewall/batchDelete:
    post:
      description: Delete multiple rules at once
      operationId: deleteFirewallRules
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              rules:
              - id: 64472dfd-d426-45e1-8289-5e1973bb0c04
              - id: d85adbc-ac34-406d-9086-88ec4fa6418a
            schema:
              $ref: '#/components/schemas/deleteFirewallRulesOpts'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                deleted:
                - id: 1ddfec52-9643-4ac1-95bf-1007bf66963f
                  name: null
                  protocol: ALL
                  cidr: 0.0.0.0/0
                  startPort: 0
                  endPort: 0
                  icmpCode: null
                  icmpType: null
                failed:
                - id: 05f45369-df1e-4455-93f1-f2ef51d4aa6d
                  name: tcp rule
                  protocol: TCP
                  cidr: 192.168.0.0/16
                  startPort: 22
                  endPort: 22
                  icmpCode: null
                  icmpType: null
              schema:
                $ref: '#/components/schemas/deleteFirewallRulesResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Delete firewall rules in batch
      tags:
      - publicCloud
  /isos:
    get:
      description: List all available ISO images
      operationId: getIsoList
      parameters:
      - description: Limit the number of results returned.
        example: 20
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Return results starting from the given offset.
        example: 10
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                isos:
                - id: GRML
                  name: GRML 2022.11
                - id: ACRONIS_BOOT_MEDIA
                  name: Acronis Boot Media
                _metadata:
                  totalCount: 2
                  limit: 20
                  offset: 0
              schema:
                $ref: '#/components/schemas/getIsoListResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: List available ISOs
      tags:
      - publicCloud
  /operatingSystems:
    get:
      operationId: getOperatingSystemList
      parameters:
      - description: Limit the number of results returned.
        example: 20
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Return results starting from the given offset.
        example: 10
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                operatingSystems:
                - id: UBUNTU_22_04_64BIT
                  name: Ubuntu 22.04 LTS (x86_64)
                  version: "22.04"
                  family: linux
                  flavour: ubuntu
                  architecture: x86_64
                  marketApps:
                  - LOADBALANCER
                  storageTypes:
                  - LOCAL
                  - CENTRAL
                - id: UBUNTU_20_04_64BIT
                  name: Ubuntu 20.04 LTS (x86_64)
                  version: "20.04"
                  family: linux
                  flavour: ubuntu
                  architecture: x86_64
                  marketApps: []
                  storageTypes:
                  - LOCAL
                  - CENTRAL
                - id: DEBIAN_12_64BIT
                  name: Debian 12 (x86_64)
                  version: "12"
                  family: linux
                  flavour: debian
                  architecture: x86_64
                  marketApps: []
                  storageTypes:
                  - LOCAL
                  - CENTRAL
                - id: DEBIAN_11_64BIT
                  name: Debian 11 (x86_64)
                  version: "11"
                  family: linux
                  flavour: debian
                  architecture: x86_64
                  marketApps: []
                  storageTypes:
                  - LOCAL
                  - CENTRAL
                - id: DEBIAN_10_64BIT
                  name: Debian 10 (x86_64)
                  version: "10"
                  family: linux
                  flavour: debian
                  architecture: x86_64
                  marketApps: []
                  storageTypes:
                  - LOCAL
                  - CENTRAL
                - id: FREEBSD_13_64BIT
                  name: FreeBSD 13.2 (x86_64)
                  version: "13.2"
                  family: bsd
                  flavour: freebsd
                  architecture: x86_64
                  marketApps: []
                  storageTypes:
                  - LOCAL
                  - CENTRAL
                - id: CENTOS_7_64BIT
                  name: CentOS 7 (x86_64)
                  version: "7"
                  family: linux
                  flavour: centos
                  architecture: x86_64
                  marketApps: []
                  storageTypes:
                  - LOCAL
                  - CENTRAL
                - id: ALMALINUX_9_64BIT
                  name: AlmaLinux 9 (x86_64)
                  version: "9"
                  family: linux
                  flavour: almalinux
                  architecture: x86_64
                  marketApps: []
                  storageTypes:
                  - LOCAL
                  - CENTRAL
                - id: ALMALINUX_8_64BIT
                  name: AlmaLinux 8 (x86_64)
                  version: "8"
                  family: linux
                  flavour: almalinux
                  architecture: x86_64
                  marketApps: []
                  storageTypes:
                  - LOCAL
                  - CENTRAL
                - id: ROCKY_LINUX_9_64BIT
                  name: Rocky Linux 9 (x86_64)
                  version: "9"
                  family: linux
                  flavour: rockylinux
                  architecture: x86_64
                  marketApps: []
                  storageTypes:
                  - LOCAL
                  - CENTRAL
                - id: ROCKY_LINUX_8_64BIT
                  name: Rocky Linux 8 (x86_64)
                  version: "8"
                  family: linux
                  flavour: rockylinux
                  architecture: x86_64
                  marketApps: []
                  storageTypes:
                  - LOCAL
                  - CENTRAL
                - id: WINDOWS_SERVER_2022_STANDARD_64BIT
                  name: Windows Server 2022 Standard (x64)
                  version: "2022"
                  family: windows
                  flavour: windows
                  architecture: x86_64
                  marketApps: []
                  storageTypes:
                  - CENTRAL
                _metadata:
                  totalCount: 12
                  limit: 20
                  offset: 0
              schema:
                $ref: '#/components/schemas/getOperatingSystemListResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: List all available Operating Systems
      tags:
      - publicCloud
  /marketApps:
    get:
      description: Get all available marketplace apps.
      operationId: getMarketAppList
      responses:
        "200":
          content:
            application/json:
              example:
                marketApps:
                - id: LOADBALANCER
                  name: Load Balancer
                  category: LOAD_BALANCER
                  version: null
                  family: loadbalancer
                  operatingSystem:
                    id: UBUNTU_22_04_64BIT
                    name: Ubuntu 22.04 LTS (x86_64)
                    version: "22.04"
                    family: linux
                    flavour: ubuntu
                    architecture: x86_64
                _metadata:
                  totalCount: 1
                  limit: 20
                  offset: 0
              schema:
                $ref: '#/components/schemas/getMarketAppListResult'
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Get marketplace apps
      tags:
      - publicCloud
  /instances/{instanceId}/attachIso:
    post:
      description: |-
        Instance must not have ISO attached, otherwise, it will return a validation error.

        Available ISOs can be obtained using `/v1/isos`.
      operationId: attachIso
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              isoId: GRML
            schema:
              $ref: '#/components/schemas/attachIsoOpts'
        required: true
      responses:
        "202":
          description: Accepted.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Attach ISO to instance
      tags:
      - publicCloud
  /instances/{instanceId}/detachIso:
    post:
      description: "Instance must have ISO attached, otherwise, it will return a validation\
        \ error"
      operationId: detachIso
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "202":
          description: Accepted.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Detach ISO from instance
      tags:
      - publicCloud
  /instances/{instanceId}/reinstall/operatingSystems:
    get:
      description: List Operating Systems available for reinstall
      operationId: getReinstallOsList
      parameters:
      - description: Instance's ID
        example: 695ddd91-051f-4dd6-9120-938a927a47d0
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: UBUNTU_22_04_64BIT
                name: Ubuntu 22.04 LTS (x86_64)
                version: "22.04"
                family: linux
                flavour: ubuntu
                architecture: x86_64
                marketApps: []
                storageTypes:
                - LOCAL
                - CENTRAL
              - id: UBUNTU_20_04_64BIT
                name: Ubuntu 20.04 LTS (x86_64)
                version: "20.04"
                family: linux
                flavour: ubuntu
                architecture: x86_64
                marketApps: []
                storageTypes:
                - LOCAL
                - CENTRAL
              - id: DEBIAN_12_64BIT
                name: Debian 12 (x86_64)
                version: "12"
                family: linux
                flavour: debian
                architecture: x86_64
                marketApps: []
                storageTypes:
                - LOCAL
                - CENTRAL
              - id: DEBIAN_11_64BIT
                name: Debian 11 (x86_64)
                version: "11"
                family: linux
                flavour: debian
                architecture: x86_64
                marketApps: []
                storageTypes:
                - LOCAL
                - CENTRAL
              - id: DEBIAN_10_64BIT
                name: Debian 10 (x86_64)
                version: "10"
                family: linux
                flavour: debian
                architecture: x86_64
                marketApps: []
                storageTypes:
                - LOCAL
                - CENTRAL
              - id: CENTOS_7_64BIT
                name: CentOS 7 (x86_64)
                version: "7"
                family: linux
                flavour: centos
                architecture: x86_64
                marketApps: []
                storageTypes:
                - LOCAL
                - CENTRAL
              - id: ALMALINUX_9_64BIT
                name: AlmaLinux 9 (x86_64)
                version: "9"
                family: linux
                flavour: almalinux
                architecture: x86_64
                marketApps: []
                storageTypes:
                - LOCAL
                - CENTRAL
              - id: ALMALINUX_8_64BIT
                name: AlmaLinux 8 (x86_64)
                version: "8"
                family: linux
                flavour: almalinux
                architecture: x86_64
                marketApps: []
                storageTypes:
                - LOCAL
                - CENTRAL
              - id: ROCKY_LINUX_9_64BIT
                name: Rocky Linux 9 (x86_64)
                version: "9"
                family: linux
                flavour: rockylinux
                architecture: x86_64
                marketApps: []
                storageTypes:
                - LOCAL
                - CENTRAL
              - id: ROCKY_LINUX_8_64BIT
                name: Rocky Linux 8 (x86_64)
                version: "8"
                family: linux
                flavour: rockylinux
                architecture: x86_64
                marketApps: []
                storageTypes:
                - LOCAL
                - CENTRAL
              - id: FREEBSD_13_64BIT
                name: FreeBSD 13.2 (x86_64)
                version: "13.2"
                family: bsd
                flavour: freebsd
                architecture: x86_64
                marketApps: []
                storageTypes:
                - LOCAL
                - CENTRAL
              - id: FREEBSD_14_64BIT
                name: FreeBSD 14.0 (x86_64)
                version: "14.0"
                family: bsd
                flavour: freebsd
                architecture: x86_64
                marketApps: []
                storageTypes:
                - LOCAL
                - CENTRAL
              schema:
                items:
                  $ref: '#/components/schemas/operatingSystem'
                type: array
          description: OK.
        "400":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "400"
                errorMessage: The API could not interpret your request correctly.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Bad Request.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: List OSes available for reinstall
      tags:
      - publicCloud
components:
  parameters:
    limit:
      description: Limit the number of results returned.
      example: 20
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
    offset:
      description: Return results starting from the given offset.
      example: 10
      explode: true
      in: query
      name: offset
      required: false
      schema:
        type: integer
      style: form
    instanceId:
      description: Instance's ID
      example: 695ddd91-051f-4dd6-9120-938a927a47d0
      explode: false
      in: path
      name: instanceId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    equipmentId:
      description: Equipment's UUID
      example: 695ddd91-051f-4dd6-9120-938a927a47d0
      explode: false
      in: path
      name: equipmentId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
  responses:
    "400":
      content:
        application/json:
          example:
            correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
            errorCode: "400"
            errorMessage: The API could not interpret your request correctly.
          schema:
            $ref: '#/components/schemas/errorResult'
      description: Bad Request.
    "401":
      content:
        application/json:
          example:
            correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
            errorCode: "401"
            errorMessage: You are not authorized to view this resource.
          schema:
            $ref: '#/components/schemas/errorResult'
      description: Not Authorized.
    "403":
      content:
        application/json:
          example:
            correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
            errorCode: "403"
            errorMessage: Access to the requested resource is forbidden.
          schema:
            $ref: '#/components/schemas/errorResult'
      description: Forbidden.
    "404":
      content:
        application/json:
          example:
            correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
            errorCode: "404"
            errorMessage: Resource not found
          schema:
            $ref: '#/components/schemas/errorResult'
      description: Not Found.
    "500":
      content:
        application/json:
          example:
            correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
            errorCode: "500"
            errorMessage: '''The API could not handle your request at this time.'
          schema:
            $ref: '#/components/schemas/errorResult'
      description: Internal Server Error.
    "503":
      content:
        application/json:
          example:
            correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
            errorCode: "503"
            errorMessage: The API is not available at the moment.
          schema:
            $ref: '#/components/schemas/errorResult'
      description: Service Unavailable.
  schemas:
    _metadata:
      description: Metadata about the collection
      example:
        offset: 0
        limit: 5
        totalCount: 2
      properties:
        totalCount:
          description: Total amount of orders in this collection
          example: 2
          type: number
        offset:
          default: 0
          description: The offset used to generate this response
          example: 0
          type: number
        limit:
          default: 5
          description: The limit used to generate this response
          example: 5
          type: number
      title: metadata
      type: object
    getRegionListResult:
      example:
        regions:
        - name: eu-west-3
          location: Amsterdam
        - name: eu-west-3
          location: Amsterdam
        _metadata:
          offset: 0
          limit: 5
          totalCount: 2
      properties:
        regions:
          items:
            $ref: '#/components/schemas/region'
          type: array
        _metadata:
          $ref: '#/components/schemas/_metadata'
      type: object
    errorResult:
      example:
        errorMessage: errorMessage
        errorCode: errorCode
        correlationId: correlationId
        errorDetails:
        - key:
          - errorDetails
          - errorDetails
        - key:
          - errorDetails
          - errorDetails
      properties:
        correlationId:
          description: The correlation ID of the current request.
          type: string
        errorCode:
          description: The error code.
          type: string
        errorMessage:
          description: A human friendly description of the error.
          type: string
        errorDetails:
          items:
            additionalProperties:
              items:
                type: string
              type: array
            type: object
          type: array
      type: object
    name:
      description: Instance type's name
      type: string
    instanceResources:
      description: Resources available for the load balancer
      example:
        memory:
          unit: GiB
          value: 3.75
        publicNetworkSpeed:
          unit: Gbps
          value: 1
        cpu:
          unit: vCPU
          value: 2
        privateNetworkSpeed:
          unit: Mbps
          value: 1000
      properties:
        cpu:
          $ref: '#/components/schemas/cpu'
        memory:
          $ref: '#/components/schemas/memory'
        publicNetworkSpeed:
          $ref: '#/components/schemas/publicNetworkSpeed'
        privateNetworkSpeed:
          $ref: '#/components/schemas/privateNetworkSpeed'
      title: instanceResource
      type: object
    storageTypes:
      description: The supported storage types for the instance type
      example:
      - CENTRAL
      - LOCAL
      items:
        type: string
      nullable: true
      type: array
    price:
      example:
        compute:
          monthlyPrice: monthlyPrice
          hourlyPrice: hourlyPrice
        currencySymbol: $
        currency: USD
        storage:
          central:
            monthlyPrice: monthlyPrice
            hourlyPrice: hourlyPrice
          local:
            monthlyPrice: monthlyPrice
            hourlyPrice: hourlyPrice
      properties:
        currency:
          example: USD
          type: string
        currencySymbol:
          example: $
          type: string
        compute:
          $ref: '#/components/schemas/compute'
        storage:
          $ref: '#/components/schemas/storage'
      type: object
    getInstanceTypeListResult:
      example:
        instanceTypes:
        - name: name
          resources:
            memory:
              unit: GiB
              value: 3.75
            publicNetworkSpeed:
              unit: Gbps
              value: 1
            cpu:
              unit: vCPU
              value: 2
            privateNetworkSpeed:
              unit: Mbps
              value: 1000
          storageTypes:
          - CENTRAL
          - LOCAL
          prices:
            compute:
              monthlyPrice: monthlyPrice
              hourlyPrice: hourlyPrice
            currencySymbol: $
            currency: USD
            storage:
              central:
                monthlyPrice: monthlyPrice
                hourlyPrice: hourlyPrice
              local:
                monthlyPrice: monthlyPrice
                hourlyPrice: hourlyPrice
        - name: name
          resources:
            memory:
              unit: GiB
              value: 3.75
            publicNetworkSpeed:
              unit: Gbps
              value: 1
            cpu:
              unit: vCPU
              value: 2
            privateNetworkSpeed:
              unit: Mbps
              value: 1000
          storageTypes:
          - CENTRAL
          - LOCAL
          prices:
            compute:
              monthlyPrice: monthlyPrice
              hourlyPrice: hourlyPrice
            currencySymbol: $
            currency: USD
            storage:
              central:
                monthlyPrice: monthlyPrice
                hourlyPrice: hourlyPrice
              local:
                monthlyPrice: monthlyPrice
                hourlyPrice: hourlyPrice
        _metadata:
          offset: 0
          limit: 5
          totalCount: 2
      properties:
        _metadata:
          $ref: '#/components/schemas/_metadata'
        instanceTypes:
          items:
            $ref: '#/components/schemas/instanceTypeDetails'
          type: array
      type: object
    operatingSystem:
      example:
        marketApps:
        - LOADBALANCER
        - LOADBALANCER
        flavour: ubuntu
        name: Ubuntu 20.04 LTS (x86_64)
        id: UBUNTU_20_04_64BIT
        storageTypes:
        - CENTRAL
        - LOCAL
        family: linux
        version: "20.04"
        architecture: x86_64
      properties:
        id:
          example: UBUNTU_20_04_64BIT
          type: string
        name:
          example: Ubuntu 20.04 LTS (x86_64)
          type: string
        version:
          example: "20.04"
          type: string
        family:
          example: linux
          type: string
        flavour:
          example: ubuntu
          type: string
        architecture:
          example: x86_64
          type: string
        marketApps:
          items:
            example: LOADBALANCER
            type: string
          type: array
        storageTypes:
          description: The supported storage types for the instance type
          example:
          - CENTRAL
          - LOCAL
          items:
            type: string
          type: array
      title: operatingSystem
      type: object
    instanceState:
      description: The instance's current state
      enum:
      - RUNNING
      - STOPPED
      - CREATING
      - DESTROYING
      - DESTROYED
      type: string
    instanceType:
      description: Instance type
      example: lsw.m3.large
      title: instanceType
      type: string
    ip:
      example:
        prefixLength: "28"
        reverseLookup: reverseLookup
        ip: 127.0.0.1
        nullRouted: true
        mainIp: true
        ddos:
          detectionProfile: STANDARD_DEFAULT
          protectionType: STANDARD
        version: 6
      properties:
        ip:
          description: Ip Address
          example: 127.0.0.1
          type: string
        prefixLength:
          description: The number of leading bits in the IP address
          example: "28"
          type: string
        version:
          description: Ip version
          enum:
          - 4
          - 6
          type: integer
        nullRouted:
          description: Whether or not the IP has been nulled
          type: boolean
        mainIp:
          type: boolean
        reverseLookup:
          nullable: true
          type: string
        ddos:
          $ref: '#/components/schemas/ddos'
      title: ip
      type: object
    contractType:
      description: "Select HOURLY for billing based on hourly usage, else MONTHLY\
        \ for billing per month usage"
      enum:
      - HOURLY
      - MONTHLY
      type: string
    getInstanceListResult:
      example:
        instances:
        - billingFrequency: 1
          rootDiskSize: 0
          contractType: null
          hasPrivateNetwork: true
          resources:
            memory:
              unit: GiB
              value: 3.75
            publicNetworkSpeed:
              unit: Gbps
              value: 1
            cpu:
              unit: vCPU
              value: 2
            privateNetworkSpeed:
              unit: Mbps
              value: 1000
          startedAt: 2000-01-23T04:56:07.000+00:00
          type: lsw.m3.large
          operatingSystem:
            marketApps:
            - LOADBALANCER
            - LOADBALANCER
            flavour: ubuntu
            name: Ubuntu 20.04 LTS (x86_64)
            id: UBUNTU_20_04_64BIT
            storageTypes:
            - CENTRAL
            - LOCAL
            family: linux
            version: "20.04"
            architecture: x86_64
          ips:
          - prefixLength: "28"
            reverseLookup: reverseLookup
            ip: 127.0.0.1
            nullRouted: true
            mainIp: true
            ddos:
              detectionProfile: STANDARD_DEFAULT
              protectionType: STANDARD
            version: 6
          - prefixLength: "28"
            reverseLookup: reverseLookup
            ip: 127.0.0.1
            nullRouted: true
            mainIp: true
            ddos:
              detectionProfile: STANDARD_DEFAULT
              protectionType: STANDARD
            version: 6
          contractEndsAt: 2000-01-23T04:56:07.000+00:00
          reference: reference
          contractTerm: 5
          customerId: customerId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: null
          region: region
          contractCreatedAt: 2000-01-23T04:56:07.000+00:00
          hasPublicIpV4: true
          contractRenewalsAt: 2000-01-23T04:56:07.000+00:00
        - billingFrequency: 1
          rootDiskSize: 0
          contractType: null
          hasPrivateNetwork: true
          resources:
            memory:
              unit: GiB
              value: 3.75
            publicNetworkSpeed:
              unit: Gbps
              value: 1
            cpu:
              unit: vCPU
              value: 2
            privateNetworkSpeed:
              unit: Mbps
              value: 1000
          startedAt: 2000-01-23T04:56:07.000+00:00
          type: lsw.m3.large
          operatingSystem:
            marketApps:
            - LOADBALANCER
            - LOADBALANCER
            flavour: ubuntu
            name: Ubuntu 20.04 LTS (x86_64)
            id: UBUNTU_20_04_64BIT
            storageTypes:
            - CENTRAL
            - LOCAL
            family: linux
            version: "20.04"
            architecture: x86_64
          ips:
          - prefixLength: "28"
            reverseLookup: reverseLookup
            ip: 127.0.0.1
            nullRouted: true
            mainIp: true
            ddos:
              detectionProfile: STANDARD_DEFAULT
              protectionType: STANDARD
            version: 6
          - prefixLength: "28"
            reverseLookup: reverseLookup
            ip: 127.0.0.1
            nullRouted: true
            mainIp: true
            ddos:
              detectionProfile: STANDARD_DEFAULT
              protectionType: STANDARD
            version: 6
          contractEndsAt: 2000-01-23T04:56:07.000+00:00
          reference: reference
          contractTerm: 5
          customerId: customerId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: null
          region: region
          contractCreatedAt: 2000-01-23T04:56:07.000+00:00
          hasPublicIpV4: true
          contractRenewalsAt: 2000-01-23T04:56:07.000+00:00
        _metadata:
          offset: 0
          limit: 5
          totalCount: 2
      properties:
        instances:
          items:
            $ref: '#/components/schemas/instance'
          type: array
        _metadata:
          $ref: '#/components/schemas/_metadata'
      type: object
    launchInstanceOpts:
      properties:
        region:
          description: Region to launch the instance into
          type: string
        type:
          description: Instance type
          example: lsw.m3.large
          title: instanceType
          type: string
        operatingSystemId:
          description: Operating System ID
          example: UBUNTU_22_04_64BIT
          type: string
        marketAppId:
          description: Market App ID that must be installed into the instance
          example: CPANEL
          type: string
        reference:
          description: An identifying name you can refer to the instance
          type: string
        contractType:
          enum:
          - HOURLY
          - MONTHLY
          type: string
        contractTerm:
          description: Contract commitment. Used only when contract type is MONTHLY
          enum:
          - 0
          - 1
          - 3
          - 6
          - 12
          type: integer
        billingFrequency:
          description: "How often you wish to be charged. Used only when contract\
            \ type is MONTHLY. '1' means every month, '3' every three months and so\
            \ on."
          enum:
          - 1
          - 3
          - 6
          - 12
          type: integer
        rootDiskSize:
          description: The root disk's size in GB. Must be at least 5 GB for Linux
            and FreeBSD instances and 50 GB for Windows instances
          type: integer
        rootDiskStorageType:
          description: The root disk's storage type
          enum:
          - LOCAL
          - CENTRAL
          type: string
        sshKey:
          description: Public SSH key to be installed into the instance. Must be used
            only on Linux/FreeBSD instances
          type: string
      required:
      - billingFrequency
      - contractTerm
      - contractType
      - operatingSystemId
      - region
      - rootDiskStorageType
      type: object
    iso:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
      title: iso
      type: object
    launchInstanceCreatedResult:
      example:
        billingFrequency: 6
        privateNetwork: true
        rootDiskStorageType: LOCAL
        iso:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        rootDiskSize: 0
        contractType: null
        resources:
          memory:
            unit: GiB
            value: 3.75
          publicNetworkSpeed:
            unit: Gbps
            value: 1
          cpu:
            unit: vCPU
            value: 2
          privateNetworkSpeed:
            unit: Mbps
            value: 1000
        startedAt: 2000-01-23T04:56:07.000+00:00
        type: lsw.m3.large
        operatingSystem:
          marketApps:
          - LOADBALANCER
          - LOADBALANCER
          flavour: ubuntu
          name: Ubuntu 20.04 LTS (x86_64)
          id: UBUNTU_20_04_64BIT
          storageTypes:
          - CENTRAL
          - LOCAL
          family: linux
          version: "20.04"
          architecture: x86_64
        ips:
        - prefixLength: "28"
          reverseLookup: reverseLookup
          ip: 127.0.0.1
          nullRouted: true
          mainIp: true
          ddos:
            detectionProfile: STANDARD_DEFAULT
            protectionType: STANDARD
          version: 6
        - prefixLength: "28"
          reverseLookup: reverseLookup
          ip: 127.0.0.1
          nullRouted: true
          mainIp: true
          ddos:
            detectionProfile: STANDARD_DEFAULT
            protectionType: STANDARD
          version: 6
        contractEndsAt: 2000-01-23T04:56:07.000+00:00
        reference: reference
        publicIpV4: true
        contractTerm: 1
        customerId: customerId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: null
        marketAppId: marketAppId
        region: region
        contractCreatedAt: 2000-01-23T04:56:07.000+00:00
        contractRenewalsAt: 2000-01-23T04:56:07.000+00:00
      properties:
        customerId:
          description: The customer ID who owns the instance
          type: string
        id:
          description: The instance unique identifier
          format: uuid
          type: string
        resources:
          $ref: '#/components/schemas/instanceResources'
        region:
          description: The region where the instance was launched into
          type: string
        reference:
          description: The identifying name set to the instance
          type: string
        operatingSystem:
          $ref: '#/components/schemas/operatingSystem'
        state:
          $ref: '#/components/schemas/instanceState'
        publicIpV4:
          type: boolean
        type:
          description: Instance type
          example: lsw.m3.large
          title: instanceType
          type: string
        privateNetwork:
          type: boolean
        rootDiskSize:
          description: "The root disk size as specified during its launch or update,\
            \ in GB"
          type: integer
        rootDiskStorageType:
          description: The root disk's storage type
          enum:
          - LOCAL
          - CENTRAL
          type: string
        ips:
          items:
            $ref: '#/components/schemas/ip'
          type: array
        billingFrequency:
          type: integer
        contractTerm:
          description: The contract commitment (in months)
          type: integer
        contractType:
          $ref: '#/components/schemas/contractType'
        contractEndsAt:
          format: date-time
          nullable: true
          type: string
        startedAt:
          description: "Date and time when the instance was started for the first\
            \ time, right after launching it"
          format: date-time
          nullable: true
          type: string
        contractRenewalsAt:
          description: Date when the contract will be automatically renewed
          format: date-time
          type: string
        contractCreatedAt:
          description: Date when the contract was created
          format: date-time
          type: string
        iso:
          $ref: '#/components/schemas/iso'
        marketAppId:
          description: "The market app ID which was deployed in the instance, if any"
          nullable: true
          type: string
      type: object
    getInstanceResult:
      example:
        billingFrequency: 6
        iso:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        privateNetwork:
          subnet: 10.0.0.0/16
          privateNetworkId: privateNetworkId
          status: CONFIGURED
        rootDiskSize: 0
        contractType: null
        hasPrivateNetwork: true
        resources:
          memory:
            unit: GiB
            value: 3.75
          publicNetworkSpeed:
            unit: Gbps
            value: 1
          cpu:
            unit: vCPU
            value: 2
          privateNetworkSpeed:
            unit: Mbps
            value: 1000
        startedAt: 2000-01-23T04:56:07.000+00:00
        type: type
        operatingSystem:
          marketApps:
          - LOADBALANCER
          - LOADBALANCER
          flavour: ubuntu
          name: Ubuntu 20.04 LTS (x86_64)
          id: UBUNTU_20_04_64BIT
          storageTypes:
          - CENTRAL
          - LOCAL
          family: linux
          version: "20.04"
          architecture: x86_64
        ips:
        - prefixLength: "28"
          reverseLookup: reverseLookup
          ip: 127.0.0.1
          nullRouted: true
          mainIp: true
          ddos:
            detectionProfile: STANDARD_DEFAULT
            protectionType: STANDARD
          version: 6
        - prefixLength: "28"
          reverseLookup: reverseLookup
          ip: 127.0.0.1
          nullRouted: true
          mainIp: true
          ddos:
            detectionProfile: STANDARD_DEFAULT
            protectionType: STANDARD
          version: 6
        contractEndsAt: 2000-01-23T04:56:07.000+00:00
        reference: reference
        contractTerm: 1
        customerId: customerId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: null
        region: region
        contractCreatedAt: 2000-01-23T04:56:07.000+00:00
        hasPublicIpV4: true
        contractRenewalsAt: 2000-01-23T04:56:07.000+00:00
      properties:
        customerId:
          description: The customer ID who owns the instance
          type: string
        id:
          description: The instance unique identifier
          format: uuid
          type: string
        resources:
          $ref: '#/components/schemas/instanceResources'
        type:
          description: Instance type
          type: string
        region:
          description: The region where the instance was launched into
          type: string
        reference:
          description: The identifying name set to the instance
          type: string
        operatingSystem:
          $ref: '#/components/schemas/operatingSystem'
        state:
          $ref: '#/components/schemas/instanceState'
        hasPublicIpV4:
          type: boolean
        hasPrivateNetwork:
          type: boolean
        rootDiskSize:
          description: "The root disk size as specified during its launch or update,\
            \ in GB"
          type: integer
        ips:
          items:
            $ref: '#/components/schemas/ip'
          type: array
        billingFrequency:
          type: integer
        contractTerm:
          description: The contract commitment (in months)
          type: integer
        contractType:
          $ref: '#/components/schemas/contractType'
        contractEndsAt:
          format: date-time
          type: string
        startedAt:
          description: "Date and time when the instance was started for the first\
            \ time, right after launching it"
          format: date-time
          type: string
        contractRenewalsAt:
          description: Date when the contract will be automatically renewed
          format: date-time
          type: string
        contractCreatedAt:
          description: Date when the contract was created
          format: date-time
          type: string
        iso:
          $ref: '#/components/schemas/iso'
        privateNetwork:
          $ref: '#/components/schemas/privateNetwork'
      type: object
    updateInstanceOpts:
      properties:
        type:
          description: Instance type
          example: lsw.m3.large
          title: instanceType
          type: string
        reference:
          description: An identifying name you can refer to the instance
          type: string
        contractType:
          enum:
          - MONTHLY
          type: string
        contractTerm:
          description: Contract commitment. Can only be used when updating the contract
            type from HOURLY and MONTHLY.
          enum:
          - 0
          - 1
          - 3
          - 6
          - 12
          type: integer
        billingFrequency:
          description: "How often you wish to be charged. Can only be used when updating\
            \ the contract type from HOURLY to MONTHLY. '1' means every month, '3'\
            \ every three months and so on."
          enum:
          - 1
          - 3
          - 6
          - 12
          type: integer
        rootDiskSize:
          description: The root disk's size in GB. Must be at least 5 GB for Linux
            and FreeBSD instances and 50 GB for Windows instances
          type: integer
      type: object
    updateInstanceResult:
      example:
        billingFrequency: 0
        privateNetwork: true
        iso: iso
        rootDiskSize: 10
        contractType: null
        resources:
          memory:
            unit: GiB
            value: 3.75
          publicNetworkSpeed:
            unit: Gbps
            value: 1
          cpu:
            unit: vCPU
            value: 2
          privateNetworkSpeed:
            unit: Mbps
            value: 1000
        startedAt: 2000-01-23T04:56:07.000+00:00
        type: lsw.m3.large
        equipmentId: equipmentId
        operatingSystem:
          marketApps:
          - LOADBALANCER
          - LOADBALANCER
          flavour: ubuntu
          name: Ubuntu 20.04 LTS (x86_64)
          id: UBUNTU_20_04_64BIT
          storageTypes:
          - CENTRAL
          - LOCAL
          family: linux
          version: "20.04"
          architecture: x86_64
        ips:
        - prefixLength: "28"
          reverseLookup: reverseLookup
          ip: 127.0.0.1
          nullRouted: true
          mainIp: true
          ddos:
            detectionProfile: STANDARD_DEFAULT
            protectionType: STANDARD
          version: 6
        - prefixLength: "28"
          reverseLookup: reverseLookup
          ip: 127.0.0.1
          nullRouted: true
          mainIp: true
          ddos:
            detectionProfile: STANDARD_DEFAULT
            protectionType: STANDARD
          version: 6
        contractEndsAt: 2000-01-23T04:56:07.000+00:00
        reference: reference
        publicIpV4: true
        contractTerm: 6
        customerId: customerId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: CREATING
        region: region
        contractCreatedAt: 2000-01-23T04:56:07.000+00:00
        salesOrgId: salesOrgId
        contractRenewalsAt: 2000-01-23T04:56:07.000+00:00
      properties:
        equipmentId:
          description: The customer's equipment ID
          type: string
        customerId:
          description: The customer's ID
          type: string
        salesOrgId:
          type: string
        id:
          description: The instance's identifier
          format: uuid
          type: string
        type:
          description: Instance type
          example: lsw.m3.large
          title: instanceType
          type: string
        region:
          description: The region where the instance has been launched into
          type: string
        reference:
          description: The identifying name set to the instance
          type: string
        operatingSystem:
          $ref: '#/components/schemas/operatingSystem'
        resources:
          $ref: '#/components/schemas/instanceResources'
        state:
          example: CREATING
          type: string
        publicIpV4:
          type: boolean
        privateNetwork:
          type: boolean
        startedAt:
          format: date-time
          nullable: true
          type: string
        rootDiskSize:
          example: 10
          type: integer
        ips:
          items:
            $ref: '#/components/schemas/ip'
          type: array
        billingFrequency:
          type: integer
        contractTerm:
          type: integer
        contractType:
          $ref: '#/components/schemas/contractType'
        contractEndsAt:
          format: date-time
          nullable: true
          type: string
        contractRenewalsAt:
          format: date-time
          type: string
        contractCreatedAt:
          format: date-time
          type: string
        iso:
          nullable: true
          type: string
      type: object
    getConsoleAccessToInstanceResult:
      example:
        url: url
      properties:
        url:
          description: The URL to the console
          type: string
      type: object
    getUpdateInstanceTypeListResult:
      example:
        instanceTypes:
        - name: name
          resources:
            memory:
              unit: GiB
              value: 3.75
            publicNetworkSpeed:
              unit: Gbps
              value: 1
            cpu:
              unit: vCPU
              value: 2
            privateNetworkSpeed:
              unit: Mbps
              value: 1000
          storageTypes:
          - CENTRAL
          - LOCAL
          prices:
            key:
              compute:
                monthlyPrice: monthlyPrice
                hourlyPrice: hourlyPrice
              currencySymbol: $
              currency: USD
              storage:
                central:
                  monthlyPrice: monthlyPrice
                  hourlyPrice: hourlyPrice
                local:
                  monthlyPrice: monthlyPrice
                  hourlyPrice: hourlyPrice
        - name: name
          resources:
            memory:
              unit: GiB
              value: 3.75
            publicNetworkSpeed:
              unit: Gbps
              value: 1
            cpu:
              unit: vCPU
              value: 2
            privateNetworkSpeed:
              unit: Mbps
              value: 1000
          storageTypes:
          - CENTRAL
          - LOCAL
          prices:
            key:
              compute:
                monthlyPrice: monthlyPrice
                hourlyPrice: hourlyPrice
              currencySymbol: $
              currency: USD
              storage:
                central:
                  monthlyPrice: monthlyPrice
                  hourlyPrice: hourlyPrice
                local:
                  monthlyPrice: monthlyPrice
                  hourlyPrice: hourlyPrice
        _metadata:
          offset: 0
          limit: 5
          totalCount: 2
      properties:
        _metadata:
          $ref: '#/components/schemas/_metadata'
        instanceTypes:
          items:
            $ref: '#/components/schemas/updateInstanceType'
          type: array
      type: object
    credentialType:
      enum:
      - OPERATING_SYSTEM
      - CONTROL_PANEL
      title: credentialType
      type: string
    credential:
      example:
        type: null
        username: root
      properties:
        type:
          $ref: '#/components/schemas/credentialType'
        username:
          example: root
          type: string
      title: credential
      type: object
    getCredentialListResult:
      example:
        credentials:
        - type: null
          username: root
        - type: null
          username: root
        _metadata:
          offset: 0
          limit: 5
          totalCount: 2
      properties:
        credentials:
          items:
            $ref: '#/components/schemas/credential'
          type: array
        _metadata:
          $ref: '#/components/schemas/_metadata'
      type: object
    storeCredentialOpts:
      properties:
        type:
          $ref: '#/components/schemas/credentialType'
        username:
          description: "Can contain only alphanumeric values and characters `@`, `.`,\
            \ `-` and `_`"
          type: string
        password:
          description: The password you'd like to store
          type: string
      required:
      - password
      - type
      - username
      type: object
    storeCredentialResult:
      example:
        password: password
        type: null
        username: username
      properties:
        type:
          $ref: '#/components/schemas/credentialType'
        username:
          description: The provided username
          type: string
        password:
          description: The provided password
          type: string
      type: object
    getCredentialListByTypeResult:
      example:
        credentials:
        - type: null
          username: root
        - type: null
          username: root
        _metadata:
          offset: 0
          limit: 5
          totalCount: 2
      properties:
        credentials:
          items:
            $ref: '#/components/schemas/credential'
          type: array
        _metadata:
          $ref: '#/components/schemas/_metadata'
      type: object
    getCredentialResult:
      example:
        password: "12341234"
        type: null
        username: root
      properties:
        type:
          $ref: '#/components/schemas/credentialType'
        username:
          example: root
          type: string
        password:
          example: "12341234"
          format: password
          type: string
      type: object
    updateCredentialOpts:
      properties:
        password:
          description: The new password
          type: string
      required:
      - password
      type: object
    updateCredentialResult:
      example:
        password: password
        type: null
        username: username
      properties:
        type:
          $ref: '#/components/schemas/credentialType'
        username:
          description: The provided username
          type: string
        password:
          description: The provided password
          type: string
      type: object
    tier:
      example:
        price: 0
        usage: 1000
      properties:
        usage:
          description: "Traffic sent, in GB"
          example: 1000
          type: number
        price:
          description: "Total price of the tier, based on the usage. The first tier\
            \ is free, so this will be 0 for the first tier. From tier 1 onwards,\
            \ the usage has costs. Each tier has it own price."
          example: 0
          type: number
      title: tier
      type: object
    getExpensesResult:
      example:
        billing:
          instances:
          - billingFrequency: 1
            hours: 14
            contractType: HOURLY
            rootDiskSize: 84
            resources:
              memory:
                unit: GiB
                value: 3.75
              publicNetworkSpeed:
                unit: Gbps
                value: 1
              cpu:
                unit: vCPU
                value: 2
              privateNetworkSpeed:
                unit: Mbps
                value: 1000
            startedAt: 2023-11-30T16:31:46Z
            reference: test-instance
            billingType: POSTPAID
            price: "0.72"
            contractTerm: 0
            from: 2023-12-01T00:00:00Z
            id: b778824a-a96e-4f6f-9713-7b7196f09c4f
            to: 2023-12-01T13:18:41Z
            contractCreatedAt: 2023-11-30T16:31:28Z
            rootDiskType: CENTRAL
          - billingFrequency: 1
            hours: 14
            contractType: HOURLY
            rootDiskSize: 84
            resources:
              memory:
                unit: GiB
                value: 3.75
              publicNetworkSpeed:
                unit: Gbps
                value: 1
              cpu:
                unit: vCPU
                value: 2
              privateNetworkSpeed:
                unit: Mbps
                value: 1000
            startedAt: 2023-11-30T16:31:46Z
            reference: test-instance
            billingType: POSTPAID
            price: "0.72"
            contractTerm: 0
            from: 2023-12-01T00:00:00Z
            id: b778824a-a96e-4f6f-9713-7b7196f09c4f
            to: 2023-12-01T13:18:41Z
            contractCreatedAt: 2023-11-30T16:31:28Z
            rootDiskType: CENTRAL
          traffic:
            unit: GB
            values:
              tier_0:
                price: 0
                usage: 1000
              tier_2:
                price: 0
                usage: 1000
              tier_1:
                price: 0
                usage: 1000
              tier_3:
                price: 0
                usage: 1000
      properties:
        billing:
          $ref: '#/components/schemas/billing'
      type: object
    baseFirewallRule:
      properties:
        id:
          example: 7e59b33d-05f3-4078-b251-c7831ae8fe14
          format: uuid
          type: string
        name:
          example: HTTP rule
          nullable: true
          type: string
        cidr:
          example: 0.0.0.0/0
          type: string
      type: object
    tcpUdpFirewallRule:
      allOf:
      - properties:
          protocol:
            enum:
            - ALL
            - TCP
            - UDP
            type: string
          startPort:
            minimum: 0
            type: integer
          endPort:
            description: Value will be equals to the startPort when not provided
            minimum: 0
            type: integer
          icmpType:
            nullable: true
            type: integer
          icmpCode:
            nullable: true
            type: integer
        required:
        - endPort
        - startPort
        title: tcpUdpFirewallRule
        type: object
      - $ref: '#/components/schemas/baseFirewallRule'
    icmpFirewallRule:
      allOf:
      - properties:
          protocol:
            enum:
            - ICMP
            type: string
          startPort:
            nullable: true
            type: integer
          endPort:
            nullable: true
            type: integer
          icmpType:
            example: -1
            type: integer
          icmpCode:
            example: -1
            type: integer
        required:
        - icmpCode
        - icmpType
        title: icmpFirewallRule
        type: object
      - $ref: '#/components/schemas/baseFirewallRule'
    firewallRule:
      allOf:
      - title: firewallRule
        type: object
      - oneOf:
        - $ref: '#/components/schemas/tcpUdpFirewallRule'
        - $ref: '#/components/schemas/icmpFirewallRule'
      example: {}
    getFirewallRuleListResult:
      example:
        _metadata:
          offset: 0
          limit: 5
          totalCount: 2
        firewallRules:
        - {}
        - {}
      properties:
        firewallRules:
          items:
            $ref: '#/components/schemas/firewallRule'
          type: array
        _metadata:
          $ref: '#/components/schemas/_metadata'
      type: object
    createFirewallRulesOpts:
      properties:
        rules:
          items:
            $ref: '#/components/schemas/createRule'
          type: array
      required:
      - rules
      type: object
    createFirewallRulesCreatedResult:
      example:
        created:
        - {}
        - {}
        failed:
        - {}
        - {}
      properties:
        created:
          description: List of rules that have been successfully added
          items:
            $ref: '#/components/schemas/firewallRule'
          type: array
        failed:
          description: List of rules that have failed to be added
          items:
            $ref: '#/components/schemas/firewallRule'
          type: array
      type: object
    editFirewallRulesOpts:
      properties:
        rules:
          items:
            $ref: '#/components/schemas/editRule'
          type: array
      required:
      - rules
      type: object
    editFirewallRulesResult:
      example:
        failed:
        - id: 64472dfd-d426-45e1-8289-5e1973bb0c04
          message: message
        - id: 64472dfd-d426-45e1-8289-5e1973bb0c04
          message: message
        updated:
        - {}
        - {}
      properties:
        updated:
          description: List of rules that have been successfully edited
          items:
            $ref: '#/components/schemas/firewallRule'
          type: array
        failed:
          description: List of rules that have failed to be edited along with their
            error messages
          items:
            $ref: '#/components/schemas/failedRule'
          type: array
      type: object
    deleteFirewallRulesOpts:
      properties:
        rules:
          items:
            $ref: '#/components/schemas/deletionRule'
          type: array
      required:
      - rules
      type: object
    deleteFirewallRulesResult:
      example:
        deleted:
        - {}
        - {}
        failed:
        - {}
        - {}
      properties:
        deleted:
          description: List of rules that have been successfully deleted
          items:
            $ref: '#/components/schemas/firewallRule'
          type: array
        failed:
          description: List of rules that have failed to be deleted
          items:
            $ref: '#/components/schemas/firewallRule'
          type: array
      type: object
    getIsoListResult:
      example:
        _metadata:
          offset: 0
          limit: 5
          totalCount: 2
        isos:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        isos:
          items:
            $ref: '#/components/schemas/iso'
          type: array
        _metadata:
          $ref: '#/components/schemas/_metadata'
      type: object
    getOperatingSystemListResult:
      example:
        operatingSystems:
        - marketApps:
          - marketApps
          - marketApps
          flavour: ubuntu
          name: Ubuntu 20.04 LTS (x86_64)
          id: UBUNTU_20_04_64BIT
          storageTypes:
          - LOCAL
          - LOCAL
          family: linux
          version: "20.04"
          architecture: x86_64
        - marketApps:
          - marketApps
          - marketApps
          flavour: ubuntu
          name: Ubuntu 20.04 LTS (x86_64)
          id: UBUNTU_20_04_64BIT
          storageTypes:
          - LOCAL
          - LOCAL
          family: linux
          version: "20.04"
          architecture: x86_64
        _metadata:
          offset: 0
          limit: 5
          totalCount: 2
      properties:
        operatingSystems:
          items:
            $ref: '#/components/schemas/operatingSystemDetail'
          type: array
        _metadata:
          $ref: '#/components/schemas/_metadata'
      type: object
    getMarketAppListResult:
      example:
        marketApps:
        - name: name
          id: id
          category: category
          family: family
          version: version
          operatingSystem:
            marketApps:
            - LOADBALANCER
            - LOADBALANCER
            flavour: ubuntu
            name: Ubuntu 20.04 LTS (x86_64)
            id: UBUNTU_20_04_64BIT
            storageTypes:
            - CENTRAL
            - LOCAL
            family: linux
            version: "20.04"
            architecture: x86_64
        - name: name
          id: id
          category: category
          family: family
          version: version
          operatingSystem:
            marketApps:
            - LOADBALANCER
            - LOADBALANCER
            flavour: ubuntu
            name: Ubuntu 20.04 LTS (x86_64)
            id: UBUNTU_20_04_64BIT
            storageTypes:
            - CENTRAL
            - LOCAL
            family: linux
            version: "20.04"
            architecture: x86_64
        _metadata:
          offset: 0
          limit: 5
          totalCount: 2
      properties:
        marketApps:
          items:
            $ref: '#/components/schemas/marketApp'
          type: array
        _metadata:
          $ref: '#/components/schemas/_metadata'
      type: object
    attachIsoOpts:
      properties:
        isoId:
          description: "The ISO ID, obtained using the ISO endpoints"
          type: string
      required:
      - isoId
      type: object
    region:
      example:
        name: eu-west-3
        location: Amsterdam
      properties:
        name:
          description: The region's name.
          example: eu-west-3
          type: string
        location:
          description: The city where the region is located.
          example: Amsterdam
          type: string
      title: region
      type: object
    cpu:
      description: Number of cores
      example:
        unit: vCPU
        value: 2
      properties:
        value:
          example: 2
          type: integer
        unit:
          example: vCPU
          type: string
      title: cpu
      type: object
    memory:
      description: Total memory in GiB
      example:
        unit: GiB
        value: 3.75
      properties:
        value:
          example: 3.75
          type: number
        unit:
          example: GiB
          type: string
      title: memory
      type: object
    publicNetworkSpeed:
      description: Public network speed in Gbps
      example:
        unit: Gbps
        value: 1
      properties:
        value:
          example: 1
          type: integer
        unit:
          example: Gbps
          type: string
      title: publicNetworkSpeed
      type: object
    privateNetworkSpeed:
      description: Private network speed in Gbps
      example:
        unit: Mbps
        value: 1000
      properties:
        value:
          example: 1000
          type: integer
        unit:
          example: Mbps
          type: string
      title: privateNetworkSpeed
      type: object
    compute:
      example:
        monthlyPrice: monthlyPrice
        hourlyPrice: hourlyPrice
      properties:
        hourlyPrice:
          type: string
        monthlyPrice:
          type: string
      title: compute
      type: object
    local:
      example:
        monthlyPrice: monthlyPrice
        hourlyPrice: hourlyPrice
      properties:
        hourlyPrice:
          type: string
        monthlyPrice:
          type: string
      title: local
      type: object
    central:
      example:
        monthlyPrice: monthlyPrice
        hourlyPrice: hourlyPrice
      properties:
        hourlyPrice:
          type: string
        monthlyPrice:
          type: string
      title: central
      type: object
    storage:
      example:
        central:
          monthlyPrice: monthlyPrice
          hourlyPrice: hourlyPrice
        local:
          monthlyPrice: monthlyPrice
          hourlyPrice: hourlyPrice
      properties:
        local:
          $ref: '#/components/schemas/local'
        central:
          $ref: '#/components/schemas/central'
      title: storage
      type: object
    instanceTypeDetails:
      example:
        name: name
        resources:
          memory:
            unit: GiB
            value: 3.75
          publicNetworkSpeed:
            unit: Gbps
            value: 1
          cpu:
            unit: vCPU
            value: 2
          privateNetworkSpeed:
            unit: Mbps
            value: 1000
        storageTypes:
        - CENTRAL
        - LOCAL
        prices:
          compute:
            monthlyPrice: monthlyPrice
            hourlyPrice: hourlyPrice
          currencySymbol: $
          currency: USD
          storage:
            central:
              monthlyPrice: monthlyPrice
              hourlyPrice: hourlyPrice
            local:
              monthlyPrice: monthlyPrice
              hourlyPrice: hourlyPrice
      properties:
        name:
          description: Instance type's name
          type: string
        resources:
          $ref: '#/components/schemas/instanceResources'
        storageTypes:
          description: The supported storage types for the instance type
          example:
          - CENTRAL
          - LOCAL
          items:
            type: string
          nullable: true
          type: array
        prices:
          $ref: '#/components/schemas/price'
      title: instanceTypeDetails
    ddos:
      example:
        detectionProfile: STANDARD_DEFAULT
        protectionType: STANDARD
      properties:
        detectionProfile:
          example: STANDARD_DEFAULT
          type: string
        protectionType:
          example: STANDARD
          type: string
      title: ddos
      type: object
    instance:
      example:
        billingFrequency: 1
        rootDiskSize: 0
        contractType: null
        hasPrivateNetwork: true
        resources:
          memory:
            unit: GiB
            value: 3.75
          publicNetworkSpeed:
            unit: Gbps
            value: 1
          cpu:
            unit: vCPU
            value: 2
          privateNetworkSpeed:
            unit: Mbps
            value: 1000
        startedAt: 2000-01-23T04:56:07.000+00:00
        type: lsw.m3.large
        operatingSystem:
          marketApps:
          - LOADBALANCER
          - LOADBALANCER
          flavour: ubuntu
          name: Ubuntu 20.04 LTS (x86_64)
          id: UBUNTU_20_04_64BIT
          storageTypes:
          - CENTRAL
          - LOCAL
          family: linux
          version: "20.04"
          architecture: x86_64
        ips:
        - prefixLength: "28"
          reverseLookup: reverseLookup
          ip: 127.0.0.1
          nullRouted: true
          mainIp: true
          ddos:
            detectionProfile: STANDARD_DEFAULT
            protectionType: STANDARD
          version: 6
        - prefixLength: "28"
          reverseLookup: reverseLookup
          ip: 127.0.0.1
          nullRouted: true
          mainIp: true
          ddos:
            detectionProfile: STANDARD_DEFAULT
            protectionType: STANDARD
          version: 6
        contractEndsAt: 2000-01-23T04:56:07.000+00:00
        reference: reference
        contractTerm: 5
        customerId: customerId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: null
        region: region
        contractCreatedAt: 2000-01-23T04:56:07.000+00:00
        hasPublicIpV4: true
        contractRenewalsAt: 2000-01-23T04:56:07.000+00:00
      properties:
        customerId:
          description: The customer ID who owns the instance
          type: string
        id:
          description: The instance unique identifier
          format: uuid
          type: string
        resources:
          $ref: '#/components/schemas/instanceResources'
        region:
          description: The region where the instance was launched into
          type: string
        reference:
          description: The identifying name set to the instance
          type: string
        operatingSystem:
          $ref: '#/components/schemas/operatingSystem'
        state:
          $ref: '#/components/schemas/instanceState'
        hasPublicIpV4:
          type: boolean
        hasPrivateNetwork:
          type: boolean
        type:
          description: Instance type
          example: lsw.m3.large
          title: instanceType
          type: string
        rootDiskSize:
          description: "The root disk size as specified during its launch or update,\
            \ in GB"
          type: integer
        ips:
          items:
            $ref: '#/components/schemas/ip'
          type: array
        billingFrequency:
          type: integer
        contractTerm:
          description: The contract commitment (in months)
          type: integer
        contractType:
          $ref: '#/components/schemas/contractType'
        contractEndsAt:
          format: date-time
          type: string
        startedAt:
          description: "Date and time when the instance was started for the first\
            \ time, right after launching it"
          format: date-time
          type: string
        contractRenewalsAt:
          description: Date when the contract will be automatically renewed
          format: date-time
          type: string
        contractCreatedAt:
          description: Date when the contract was created
          format: date-time
          type: string
      title: instance
      type: object
    privateNetwork:
      example:
        subnet: 10.0.0.0/16
        privateNetworkId: privateNetworkId
        status: CONFIGURED
      properties:
        privateNetworkId:
          type: string
        status:
          example: CONFIGURED
          type: string
        subnet:
          example: 10.0.0.0/16
          type: string
      title: privateNetwork
      type: object
    updateInstanceType:
      example:
        name: name
        resources:
          memory:
            unit: GiB
            value: 3.75
          publicNetworkSpeed:
            unit: Gbps
            value: 1
          cpu:
            unit: vCPU
            value: 2
          privateNetworkSpeed:
            unit: Mbps
            value: 1000
        storageTypes:
        - CENTRAL
        - LOCAL
        prices:
          key:
            compute:
              monthlyPrice: monthlyPrice
              hourlyPrice: hourlyPrice
            currencySymbol: $
            currency: USD
            storage:
              central:
                monthlyPrice: monthlyPrice
                hourlyPrice: hourlyPrice
              local:
                monthlyPrice: monthlyPrice
                hourlyPrice: hourlyPrice
      properties:
        name:
          description: Instance type's name
          type: string
        resources:
          $ref: '#/components/schemas/instanceResources'
        prices:
          additionalProperties:
            $ref: '#/components/schemas/price'
          type: object
        storageTypes:
          description: The supported storage types for the instance type
          example:
          - CENTRAL
          - LOCAL
          items:
            type: string
          nullable: true
          type: array
      title: updateInstanceType
    expenseResultInstance:
      example:
        billingFrequency: 1
        hours: 14
        contractType: HOURLY
        rootDiskSize: 84
        resources:
          memory:
            unit: GiB
            value: 3.75
          publicNetworkSpeed:
            unit: Gbps
            value: 1
          cpu:
            unit: vCPU
            value: 2
          privateNetworkSpeed:
            unit: Mbps
            value: 1000
        startedAt: 2023-11-30T16:31:46Z
        reference: test-instance
        billingType: POSTPAID
        price: "0.72"
        contractTerm: 0
        from: 2023-12-01T00:00:00Z
        id: b778824a-a96e-4f6f-9713-7b7196f09c4f
        to: 2023-12-01T13:18:41Z
        contractCreatedAt: 2023-11-30T16:31:28Z
        rootDiskType: CENTRAL
      properties:
        id:
          description: The unique identifier for the instance.
          example: b778824a-a96e-4f6f-9713-7b7196f09c4f
          type: string
        reference:
          description: The reference of the instance.
          example: test-instance
          type: string
        resources:
          $ref: '#/components/schemas/instanceResources'
        contractType:
          description: The contract type of the instance.
          enum:
          - HOURLY
          - MONTHLY
          example: HOURLY
          type: string
        contractCreatedAt:
          description: Date when the contract was created
          example: 2023-11-30T16:31:28Z
          format: date-time
          type: string
        startedAt:
          description: Date when the instance was started
          example: 2023-11-30T16:31:46Z
          format: date-time
          type: string
        contractTerm:
          description: The contract term (in months) of the instance.
          enum:
          - 0
          - 1
          - 3
          - 6
          - 12
          example: 0
          type: integer
        billingFrequency:
          description: The billing frequency (in months) of the instance.
          enum:
          - 1
          - 3
          - 6
          - 12
          example: 1
          type: integer
        rootDiskSize:
          description: "The root disk size as specified during its launch or update,\
            \ in GB"
          maximum: 1000
          minimum: 5
          type: integer
        rootDiskType:
          description: The root disk type as specified during its launch or update.
          enum:
          - CENTRAL
          - LOCAL
          example: CENTRAL
          type: string
        billingType:
          description: "The billing type of the instance. PREPAID is used for monthly\
            \ commited instances, POSTPAID for hourly instances."
          enum:
          - POSTPAID
          - PREPAID
          example: POSTPAID
          type: string
        hours:
          description: The number of hours the instance has been running.
          example: 14
          type: integer
        from:
          description: The start date of the billing period.
          example: 2023-12-01T00:00:00Z
          format: date-time
          type: string
        to:
          description: The end date of the billing period.
          example: 2023-12-01T13:18:41Z
          format: date-time
          type: string
        price:
          description: The price of the instance for the billing period.
          example: "0.72"
          type: string
      title: expenseResultInstance
      type: object
    values:
      example:
        tier_0:
          price: 0
          usage: 1000
        tier_2:
          price: 0
          usage: 1000
        tier_1:
          price: 0
          usage: 1000
        tier_3:
          price: 0
          usage: 1000
      properties:
        tier_0:
          $ref: '#/components/schemas/tier'
        tier_1:
          $ref: '#/components/schemas/tier'
        tier_2:
          $ref: '#/components/schemas/tier'
        tier_3:
          $ref: '#/components/schemas/tier'
      title: values
      type: object
    traffic:
      description: "Traffic billing information, in tiers. "
      example:
        unit: GB
        values:
          tier_0:
            price: 0
            usage: 1000
          tier_2:
            price: 0
            usage: 1000
          tier_1:
            price: 0
            usage: 1000
          tier_3:
            price: 0
            usage: 1000
      properties:
        unit:
          example: GB
          type: string
        values:
          $ref: '#/components/schemas/values'
      title: traffic
      type: object
    billing:
      example:
        instances:
        - billingFrequency: 1
          hours: 14
          contractType: HOURLY
          rootDiskSize: 84
          resources:
            memory:
              unit: GiB
              value: 3.75
            publicNetworkSpeed:
              unit: Gbps
              value: 1
            cpu:
              unit: vCPU
              value: 2
            privateNetworkSpeed:
              unit: Mbps
              value: 1000
          startedAt: 2023-11-30T16:31:46Z
          reference: test-instance
          billingType: POSTPAID
          price: "0.72"
          contractTerm: 0
          from: 2023-12-01T00:00:00Z
          id: b778824a-a96e-4f6f-9713-7b7196f09c4f
          to: 2023-12-01T13:18:41Z
          contractCreatedAt: 2023-11-30T16:31:28Z
          rootDiskType: CENTRAL
        - billingFrequency: 1
          hours: 14
          contractType: HOURLY
          rootDiskSize: 84
          resources:
            memory:
              unit: GiB
              value: 3.75
            publicNetworkSpeed:
              unit: Gbps
              value: 1
            cpu:
              unit: vCPU
              value: 2
            privateNetworkSpeed:
              unit: Mbps
              value: 1000
          startedAt: 2023-11-30T16:31:46Z
          reference: test-instance
          billingType: POSTPAID
          price: "0.72"
          contractTerm: 0
          from: 2023-12-01T00:00:00Z
          id: b778824a-a96e-4f6f-9713-7b7196f09c4f
          to: 2023-12-01T13:18:41Z
          contractCreatedAt: 2023-11-30T16:31:28Z
          rootDiskType: CENTRAL
        traffic:
          unit: GB
          values:
            tier_0:
              price: 0
              usage: 1000
            tier_2:
              price: 0
              usage: 1000
            tier_1:
              price: 0
              usage: 1000
            tier_3:
              price: 0
              usage: 1000
      properties:
        instances:
          description: List of instances to be billed in the period
          items:
            $ref: '#/components/schemas/expenseResultInstance'
          type: array
        traffic:
          $ref: '#/components/schemas/traffic'
      title: billing
      type: object
    createRule:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/tcpUdpFirewallRule'
        - $ref: '#/components/schemas/icmpFirewallRule'
      - required:
        - cidr
        - name
        - protocol
      title: createRule
    editRule:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/tcpUdpFirewallRule'
        - $ref: '#/components/schemas/icmpFirewallRule'
      - required:
        - cidr
        - id
        - name
        - protocol
      title: editRule
    failedRule:
      example:
        id: 64472dfd-d426-45e1-8289-5e1973bb0c04
        message: message
      properties:
        id:
          example: 64472dfd-d426-45e1-8289-5e1973bb0c04
          type: string
        message:
          description: The reason which the edition has failed
          type: string
      title: failedRule
      type: object
    deletionRule:
      properties:
        id:
          example: 7e59b33d-05f3-4078-b251-c7831ae8fe14
          format: uuid
          type: string
      required:
      - id
      title: deletionRule
      type: object
    operatingSystemDetail:
      example:
        marketApps:
        - marketApps
        - marketApps
        flavour: ubuntu
        name: Ubuntu 20.04 LTS (x86_64)
        id: UBUNTU_20_04_64BIT
        storageTypes:
        - LOCAL
        - LOCAL
        family: linux
        version: "20.04"
        architecture: x86_64
      properties:
        id:
          example: UBUNTU_20_04_64BIT
          type: string
        name:
          example: Ubuntu 20.04 LTS (x86_64)
          type: string
        version:
          example: "20.04"
          type: string
        family:
          example: linux
          type: string
        flavour:
          example: ubuntu
          type: string
        architecture:
          example: x86_64
          type: string
        marketApps:
          description: The marketplace app IDs used to reference to on other operations
          items:
            type: string
          type: array
        storageTypes:
          description: The storage types supported by the operating systems
          items:
            enum:
            - LOCAL
            - CENTRAL
            type: string
          type: array
      title: operatingSystemDetail
      type: object
    marketApp:
      example:
        name: name
        id: id
        category: category
        family: family
        version: version
        operatingSystem:
          marketApps:
          - LOADBALANCER
          - LOADBALANCER
          flavour: ubuntu
          name: Ubuntu 20.04 LTS (x86_64)
          id: UBUNTU_20_04_64BIT
          storageTypes:
          - CENTRAL
          - LOCAL
          family: linux
          version: "20.04"
          architecture: x86_64
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        version:
          nullable: true
          type: string
        family:
          type: string
        operatingSystem:
          $ref: '#/components/schemas/operatingSystem'
      title: marketApp
      type: object
  securitySchemes:
    ApiKeyAuth:
      description: API key authentication by setting `X-LSW-Auth` header.
      in: header
      name: X-LSW-Auth
      type: apiKey
    OAuth2:
      flows:
        clientCredentials:
          refreshUrl: https://auth.leaseweb.com/token
          scopes: {}
          tokenUrl: https://auth.leaseweb.com/token
      type: oauth2
    BearerAuth:
      scheme: bearer
      type: http
