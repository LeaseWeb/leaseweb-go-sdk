/*
LeaseWeb API for launching and managing Public Cloud instances

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.  <div class=\"badge\">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publicCloud

import (
	"encoding/json"
)

// checks if the DeleteFirewallRulesResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteFirewallRulesResult{}

// DeleteFirewallRulesResult struct for DeleteFirewallRulesResult
type DeleteFirewallRulesResult struct {
	// List of rules that have been successfully deleted
	Deleted []FirewallRule `json:"deleted,omitempty"`
	// List of rules that have failed to be deleted
	Failed []FirewallRule `json:"failed,omitempty"`
}

// NewDeleteFirewallRulesResult instantiates a new DeleteFirewallRulesResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteFirewallRulesResult() *DeleteFirewallRulesResult {
	this := DeleteFirewallRulesResult{}
	return &this
}

// NewDeleteFirewallRulesResultWithDefaults instantiates a new DeleteFirewallRulesResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteFirewallRulesResultWithDefaults() *DeleteFirewallRulesResult {
	this := DeleteFirewallRulesResult{}
	return &this
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *DeleteFirewallRulesResult) GetDeleted() []FirewallRule {
	if o == nil || IsNil(o.Deleted) {
		var ret []FirewallRule
		return ret
	}
	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteFirewallRulesResult) GetDeletedOk() ([]FirewallRule, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *DeleteFirewallRulesResult) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given []FirewallRule and assigns it to the Deleted field.
func (o *DeleteFirewallRulesResult) SetDeleted(v []FirewallRule) {
	o.Deleted = v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *DeleteFirewallRulesResult) GetFailed() []FirewallRule {
	if o == nil || IsNil(o.Failed) {
		var ret []FirewallRule
		return ret
	}
	return o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteFirewallRulesResult) GetFailedOk() ([]FirewallRule, bool) {
	if o == nil || IsNil(o.Failed) {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *DeleteFirewallRulesResult) HasFailed() bool {
	if o != nil && !IsNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given []FirewallRule and assigns it to the Failed field.
func (o *DeleteFirewallRulesResult) SetFailed(v []FirewallRule) {
	o.Failed = v
}

func (o DeleteFirewallRulesResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteFirewallRulesResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !IsNil(o.Failed) {
		toSerialize["failed"] = o.Failed
	}
	return toSerialize, nil
}

type NullableDeleteFirewallRulesResult struct {
	value *DeleteFirewallRulesResult
	isSet bool
}

func (v NullableDeleteFirewallRulesResult) Get() *DeleteFirewallRulesResult {
	return v.value
}

func (v *NullableDeleteFirewallRulesResult) Set(val *DeleteFirewallRulesResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteFirewallRulesResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteFirewallRulesResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteFirewallRulesResult(val *DeleteFirewallRulesResult) *NullableDeleteFirewallRulesResult {
	return &NullableDeleteFirewallRulesResult{value: val, isSet: true}
}

func (v NullableDeleteFirewallRulesResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteFirewallRulesResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


