/*
LeaseWeb API for launching and managing Public Cloud instances

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.  <div class=\"badge\">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publicCloud

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RegisterAutoScalingGroupLoadBalancerOpts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterAutoScalingGroupLoadBalancerOpts{}

// RegisterAutoScalingGroupLoadBalancerOpts struct for RegisterAutoScalingGroupLoadBalancerOpts
type RegisterAutoScalingGroupLoadBalancerOpts struct {
	// Load balancer ID
	LoadBalancerId string `json:"loadBalancerId"`
}

type _RegisterAutoScalingGroupLoadBalancerOpts RegisterAutoScalingGroupLoadBalancerOpts

// NewRegisterAutoScalingGroupLoadBalancerOpts instantiates a new RegisterAutoScalingGroupLoadBalancerOpts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterAutoScalingGroupLoadBalancerOpts(loadBalancerId string) *RegisterAutoScalingGroupLoadBalancerOpts {
	this := RegisterAutoScalingGroupLoadBalancerOpts{}
	this.LoadBalancerId = loadBalancerId
	return &this
}

// NewRegisterAutoScalingGroupLoadBalancerOptsWithDefaults instantiates a new RegisterAutoScalingGroupLoadBalancerOpts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterAutoScalingGroupLoadBalancerOptsWithDefaults() *RegisterAutoScalingGroupLoadBalancerOpts {
	this := RegisterAutoScalingGroupLoadBalancerOpts{}
	return &this
}

// GetLoadBalancerId returns the LoadBalancerId field value
func (o *RegisterAutoScalingGroupLoadBalancerOpts) GetLoadBalancerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoadBalancerId
}

// GetLoadBalancerIdOk returns a tuple with the LoadBalancerId field value
// and a boolean to check if the value has been set.
func (o *RegisterAutoScalingGroupLoadBalancerOpts) GetLoadBalancerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoadBalancerId, true
}

// SetLoadBalancerId sets field value
func (o *RegisterAutoScalingGroupLoadBalancerOpts) SetLoadBalancerId(v string) {
	o.LoadBalancerId = v
}

func (o RegisterAutoScalingGroupLoadBalancerOpts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterAutoScalingGroupLoadBalancerOpts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["loadBalancerId"] = o.LoadBalancerId
	return toSerialize, nil
}

func (o *RegisterAutoScalingGroupLoadBalancerOpts) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"loadBalancerId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRegisterAutoScalingGroupLoadBalancerOpts := _RegisterAutoScalingGroupLoadBalancerOpts{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRegisterAutoScalingGroupLoadBalancerOpts)

	if err != nil {
		return err
	}

	*o = RegisterAutoScalingGroupLoadBalancerOpts(varRegisterAutoScalingGroupLoadBalancerOpts)

	return err
}

type NullableRegisterAutoScalingGroupLoadBalancerOpts struct {
	value *RegisterAutoScalingGroupLoadBalancerOpts
	isSet bool
}

func (v NullableRegisterAutoScalingGroupLoadBalancerOpts) Get() *RegisterAutoScalingGroupLoadBalancerOpts {
	return v.value
}

func (v *NullableRegisterAutoScalingGroupLoadBalancerOpts) Set(val *RegisterAutoScalingGroupLoadBalancerOpts) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterAutoScalingGroupLoadBalancerOpts) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterAutoScalingGroupLoadBalancerOpts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterAutoScalingGroupLoadBalancerOpts(val *RegisterAutoScalingGroupLoadBalancerOpts) *NullableRegisterAutoScalingGroupLoadBalancerOpts {
	return &NullableRegisterAutoScalingGroupLoadBalancerOpts{value: val, isSet: true}
}

func (v NullableRegisterAutoScalingGroupLoadBalancerOpts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterAutoScalingGroupLoadBalancerOpts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


